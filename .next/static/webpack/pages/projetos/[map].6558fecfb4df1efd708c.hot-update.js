/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/projetos/[map]",{

/***/ "./pages/components/Map/index.js":
/*!***************************************!*\
  !*** ./pages/components/Map/index.js ***!
  \***************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _Applications_XAMPP_xamppfiles_htdocs_mapa_da_informacao_node_modules_next_node_modules_babel_runtime_helpers_esm_readOnlyError__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/next/node_modules/@babel/runtime/helpers/esm/readOnlyError */ \"./node_modules/next/node_modules/@babel/runtime/helpers/esm/readOnlyError.js\");\n/* harmony import */ var _hooks_useD3__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../hooks/useD3 */ \"./hooks/useD3.js\");\n/* harmony import */ var _hooks_useScript__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../hooks/useScript */ \"./hooks/useScript.js\");\n/* harmony import */ var _styled__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./styled */ \"./pages/components/Map/styled.js\");\n/* harmony import */ var d3__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! d3 */ \"./node_modules/d3/build/d3.js\");\n/* harmony import */ var d3__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(d3__WEBPACK_IMPORTED_MODULE_5__);\n/* module decorator */ module = __webpack_require__.hmd(module);\n\n\n\nvar _jsxFileName = \"/Applications/XAMPP/xamppfiles/htdocs/mapa-da-informacao/pages/components/Map/index.js\",\n    _s = $RefreshSig$();\n\n\n\n\n\n\nfunction Chart(_ref) {\n  _s();\n\n  var data = _ref.data,\n      query = _ref.query,\n      baseUrl = _ref.baseUrl;\n  (0,_hooks_useScript__WEBPACK_IMPORTED_MODULE_3__.default)('https://cdn.jsdelivr.net/npm/lodash@4.17.10/lodash.min.js');\n  (0,_hooks_useScript__WEBPACK_IMPORTED_MODULE_3__.default)('https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js');\n  (0,_hooks_useScript__WEBPACK_IMPORTED_MODULE_3__.default)('https://cdnjs.cloudflare.com/ajax/libs/howler/2.0.14/howler.core.min.js');\n  (0,_hooks_useScript__WEBPACK_IMPORTED_MODULE_3__.default)('https://cdnjs.cloudflare.com/ajax/libs/handlebars.js/4.0.11/handlebars.min.js');\n  (0,_hooks_useScript__WEBPACK_IMPORTED_MODULE_3__.default)('../vendors/jquery.mousewheel.min.js');\n  (0,_hooks_useScript__WEBPACK_IMPORTED_MODULE_3__.default)('../vendors/browser.js');\n  (0,_hooks_useScript__WEBPACK_IMPORTED_MODULE_3__.default)('../vendors/main.js');\n  var ref = (0,_hooks_useD3__WEBPACK_IMPORTED_MODULE_2__.useD3)(function (svg) {\n    var width = 1280; // window.innerWidth,\n\n    var height = 960; // window.innerHeight;\n    // let category = data.categories\n    // category.filter(word => word.show == false);\n    // console.log(category)\n\n    var svg = d3__WEBPACK_IMPORTED_MODULE_5__.select(\".mapa-vis\").attr(\"preserveAspectRatio\", \"xMinYMin meet\").attr(\"viewBox\", \"0 0 \".concat(width, \" \").concat(height));\n    svg.append(\"rect\").attr(\"class\", \"vis-background\").attr(\"width\", width).attr(\"height\", height).on(\"click\", function () {\n      closeInfo();\n    });\n    var viewport = svg.append(\"g\").attr(\"class\", \"viewport\");\n    var simulation = d3__WEBPACK_IMPORTED_MODULE_5__.forceSimulation().force(\"link\", d3__WEBPACK_IMPORTED_MODULE_5__.forceLink().id(function (d) {\n      return d.id;\n    })); // Tooltip\n\n    var tooltip = d3__WEBPACK_IMPORTED_MODULE_5__.select('.tooltip'); // var fx = new TextScramble(document.querySelector('.tooltip-text'), 15)\n    // var fxto = null\n    // UTILS\n\n    var color = d3__WEBPACK_IMPORTED_MODULE_5__.scaleOrdinal(d3__WEBPACK_IMPORTED_MODULE_5__.schemeCategory20);\n    var paleta = ['#c9b2fa', '#ae92e9', '#725f96', '#ffc28f', '#af7744', '#ffc28f']; // const temp = {\n    // \t0 : { size: 16, cluster: { y: 0.3, k: 4, size: 100 }, delay: 0, color: paleta[0] }, // doc\n    // \t1 : { size:  5, cluster: { y: 1.2, k: 2, size:  60 }, delay: 1, color: paleta[1] }, // app\n    // \t2 : { size: 20, cluster: { y: 3.0, k: 4, size: 200 }, delay: 2, color: paleta[2] }, // base\n    // \t3 : { size: 12, cluster: { y: 4.2, k: 3, size:  60 }, delay: 3, color: paleta[3] }, // ti\n    // \t4 : { size: 16, cluster: { y: 5.4, k: 3, size:  80 }, delay: 3, color: paleta[4] }, // orgao\n    // \t5 : { size:  5, cluster: { y: 7.0, k: 4, size: 100 }, delay: 5, color: paleta[5] }, // politica\n    // }\n\n    var temp = {\n      0: {\n        cluster: {\n          y: 0.3,\n          k: 4\n        },\n        delay: 0\n      },\n      // doc\n      1: {\n        cluster: {\n          y: 1.2,\n          k: 2\n        },\n        delay: 1\n      },\n      // app\n      2: {\n        cluster: {\n          y: 3.0,\n          k: 4\n        },\n        delay: 2\n      },\n      // base\n      3: {\n        cluster: {\n          y: 4.2,\n          k: 3\n        },\n        delay: 3\n      },\n      // ti\n      4: {\n        cluster: {\n          y: 5.4,\n          k: 3\n        },\n        delay: 3\n      },\n      // orgao\n      5: {\n        cluster: {\n          y: 7.0,\n          k: 4\n        },\n        delay: 5\n      } // politica\n\n    };\n\n    function node_size(d) {\n      // console.log(d)\n      // return temp[d.tipo].size + d.weight\n      return d.min_size + d.weight;\n    }\n\n    function node_size_before(d, i) {\n      // console.log(d)\n      // return temp[d.tipo].size + d.weight\n      return d.min_size + d.weight;\n    } // function node_color(t){\n    // \treturn temp[t].color\n    // }\n    // function node_cluster(t){\n    // \treturn temp[t].cluster.y\n    // }\n\n\n    function node_delay(t, i) {\n      return temp[t].delay * 100 + i * 50;\n    }\n\n    var orgao_scale = d3__WEBPACK_IMPORTED_MODULE_5__.scaleLinear().domain([1, 4]).range(['#fcd9b2', '#e07145']).interpolate(d3__WEBPACK_IMPORTED_MODULE_5__.interpolateHcl);\n    var legendas = data.categories; // console.log(data, legendas)\n\n    var legendas_g = viewport.append(\"g\").attr(\"class\", \"legenda\").selectAll('g').data(legendas);\n    var legenda = legendas_g.enter().append('g');\n    legenda.append('line').attr(\"class\", 'legenda-line').attr(\"x1\", 20).attr(\"y1\", function (d) {\n      return d.height_area;\n    }).attr(\"x2\", width - 20).attr(\"y2\", function (d) {\n      return d.height_area;\n    });\n    legenda.append('text').attr(\"class\", 'legenda-text').text(function (d) {\n      return d.title;\n    }).attr('x', 20).attr('y', function (d) {\n      return d.height_area + 25;\n    }).on(\"mouseover\", legenda_mouseover).on(\"mouseout\", legenda_mouseout); // GRAPH\n\n    var graph = {};\n\n    var _links = viewport.append(\"g\").attr(\"class\", \"links\");\n\n    var _nodes = viewport.append(\"g\").attr(\"class\", \"nodes\");\n\n    var _labels = viewport.append(\"g\").attr(\"class\", \"labels\");\n\n    var array_node = [];\n    var array_link = [];\n    var new_array_node = []; // let _nodes\n\n    var url = \"\".concat(baseUrl, \"maps/\").concat(query, \"/\");\n    d3__WEBPACK_IMPORTED_MODULE_5__.json(url, function (json) {\n      var category = json.categories;\n      var mapping = json.node_mapping; // console.log('category', category)\n      // if()\n\n      category.map(function (nodes, idx) {\n        var node = nodes.nodes; // console.log(nodes, nodes.nodes, idx)\n        // if(nodes.show){\n\n        node.map(function (item, index) {\n          var space = nodes.min_size ? nodes.min_size * index : 5 * index; // const real_size = return node_size(nodes) \n          // console.log( item )\n          // \tconsole.log( index )\n          // TODO: Colocar identificador do index de cada coluna aqui\n\n          array_node.push({\n            position: index,\n            show: nodes.show,\n            id: item.id,\n            nome: item.label,\n            nomecompleto: item.title,\n            color: nodes.node_color ? nodes.node_color : idx < 6 ? paleta[idx] : '#c9b2fa',\n            tipo: nodes.order ? nodes.order : idx,\n            tipo_label: nodes.title,\n            decription: item.text ? item.text : '',\n            button_icon: item.button_icon ? item.button_icon.url : null,\n            button_link: item.button_link ? item.button_link : null,\n            button_text: item.button_text ? item.button_text : null,\n            height: nodes.height_area,\n            x_position: item.x_position,\n            y_position: item.y_position,\n            x: item.x_position ? item.x_position + 160 : 160 + space,\n            y: item.y_position ? item.y_position + nodes.height_area : nodes.height_area + 40,\n            min_size: nodes.min_size ? nodes.min_size : 10,\n            max_size: nodes.max_size ? nodes.max_size : 80\n          });\n        }); //}\n      }); // }\n      // var myArray = ['one', 'two', 'three'];\n      // var newArray = myArray.filter(function(f) { return f !== 'two' })\n      // console.log(newArray, myArray)\n      // _nodes = array_node\n      //  const filter = array_node.filter(function(f) { \n      // \t// if( f.show !== false ) {\n      // \t// \tarray_node.push()\n      // \t// }\n      // \treturn f.show !== false \n      // })\n      // filter.map(function(o){\n      // \tnew_array_node.push(o)\n      // \t//console.log(o)\n      // })\n      // console.log('novo', new_array_node)\n      // new_array_node.push(filter)\n      // array_node.push(new_array_node)\n      // console.log(array_node, new_array_node)\n      // console.log(array_node)\n\n      var _nodesori = [];\n      array_node.map(function (o) {\n        _nodesori.push(o);\n      });\n      console.log(array_node);\n      mapping.map(function (links) {\n        var result = array_node.filter(function (word) {\n          return word.id == links.source.id;\n        });\n        var show = array_node.filter(function (word) {\n          return !word.show ? word.id : null;\n        }); // console.log('result', result, links, show)\n\n        array_link.push({\n          base: links.source.id,\n          show: show,\n          // relation: result[0] ? result[0].tipo : 0,\n          relation: result[0].tipo,\n          source: links.source.id,\n          target: links.target.id,\n          context: links.context\n        });\n      });\n      var _relations = array_link;\n      var _links = [];\n      var _linksori = [];\n\n      _relations.map(function (d) {\n        _links.push({\n          show: d.show,\n          base: d.base,\n          source: d.source,\n          relation: d.relation,\n          target: d.target,\n          context: d.context\n        });\n\n        _linksori.push({\n          show: d.show,\n          base: d.base,\n          source: d.source,\n          relation: d.relation,\n          target: d.target,\n          context: d.context\n        });\n      });\n\n      var k = {\n        0: 0,\n        // doc\n        1: 0,\n        // app\n        2: 0,\n        // base\n        3: 0,\n        // ti\n        4: 0,\n        // orgao\n        5: 0 // politica\n\n      };\n      array_node.map(function (d, i) {\n        // console.log(d)\n        // const loop = temp[d.tipo].cluster.size\n        var loop = d.max_size;\n        var step = loop / temp[d.tipo].cluster.k;\n        d.offsetY = k[d.tipo];\n        k[d.tipo] += step;\n        k[d.tipo] = k[d.tipo] % loop;\n        d.x = Number(d.x);\n        d.y = Number(d.y);\n\n        var arr = _.filter(_linksori, function (o) {\n          return o.target == d.id || o.source == d.id;\n        }); // d.color = node_color(d.tipo)\n\n\n        d.rel_ids = _.uniq(_.map(arr, 'base'));\n        d.context = _.uniq(_.map(arr, 'context')); // console.log(arr)\n\n        if (d.tipo == 3) {\n          var arr2 = _.filter(arr, function (o) {\n            return o.relation == 4;\n          });\n\n          d.weight = arr2.length * 4;\n        } else {\n          d.weight = arr.length;\n        } // console.log(d.x_position, d, i, category)\n\n\n        function isOdd(num) {\n          return num % 2;\n        }\n\n        if (d.x_position == undefined) {\n          // console.log(1)\n          var index = i == 0 ? 0 : i - 1;\n          var real_size = (d.min_size + array_node[index].weight) * 2 + 25;\n          var space = real_size * d.position; // console.log(i, d)\n          // console.log( isOdd(i) )\n\n          d.x = d.x_position ? d.x_position + 160 : 160 + space;\n          d.y = d.y_position ? d.y_position + d.height : isOdd(i) > 0 ? d.height + 60 : d.height + 40;\n        }\n      }); // MULTIPLE LINKS: START\n\n      _.each(_links, function (link) {\n        var same = _.filter(_links, {\n          'source': link.source,\n          'target': link.target\n        });\n\n        _.each(same, function (s, i) {\n          if (!s.linkNum) {\n            s.linkNum = i + 1;\n          }\n        });\n      }); // MULTIPLE LINKS: END\n\n\n      graph.nodes = array_node;\n      graph.links = _links;\n      graph.data = {};\n      graph.data.nodes = _nodesori;\n      graph.data.links = _linksori; // console.log(_links)\n      // if(data_n.show){\n\n      update(graph.nodes, graph.links); // }\n    });\n\n    function update(data_n, data_l) {\n      var t = d3__WEBPACK_IMPORTED_MODULE_5__.transition().duration(750);\n\n      var nodes = _nodes.selectAll('.node').data(data_n, function (d) {\n        return d.id;\n      });\n\n      var labels = _labels.selectAll('.label').data(data_n, function (d) {\n        return d.id;\n      });\n\n      var links = _links.selectAll('.link').data(data_l, function (d) {\n        return d.source + '_' + d.target;\n      }); // console.log(data_n, data_l)\n      // console.log(new_array_node, array_node, data_n)\n      // NODES\n\n\n      nodes.exit().transition(t).attr(\"r\", 1e-6).remove();\n      nodes.enter().append(\"g\").attr(\"class\", function (d) {\n        //console.log(d)\n        var itemName = d.context ? d.context : d.rel_ids; // return \"node node-\" + d.id + \" \" + d.rel_ids.join(\" \") + \" \" + \"node-\" + d.context.join(\" node-\")\n\n        return \"node node-\" + d.id + \" \" + d.rel_ids.join(\" \") + \" \" + \"node-\" + itemName.join(\" node-\");\n      }).attr(\"style\", function (d) {\n        return !d.show ? \"display: none\" : null;\n      }).attr('node_id', function (d) {\n        return d.id;\n      }).append(\"circle\").attr(\"r\", 0).on(\"mouseover\", node_mouseover).on(\"mouseout\", node_mouseout).on(\"click\", node_click).transition(t).delay(function (d, i) {\n        return node_delay(d.tipo, i);\n      }).attr(\"r\", function (d) {\n        return node_size(d);\n      }).attr(\"fill\", function (d) {\n        return d.color;\n      }); // LABELS\n\n      labels.enter().append(\"g\").attr(\"class\", function (d) {\n        var itemName = d.context ? d.context : d.rel_ids; // return \"label node-\" + d.tipo + \" label-\" + d.id + \" \" + d.rel_ids.join(\" \") + \" \" + \"label-\" + d.context.join(\" label-\")\n\n        return \"label node-\" + d.tipo + \" label-\" + d.id + \" \" + d.rel_ids.join(\" \") + \" \" + \"label-\" + itemName.join(\" label-\");\n      }).attr(\"style\", function (d) {\n        return !d.show ? \"display: none\" : null;\n      }).attr('label_id', function (d) {\n        return d.id;\n      }).attr('label_nome', function (d) {\n        return d.nome;\n      }).append(\"text\").text(function (d) {\n        var size = node_size(d);\n        return size <= 10 ? '' : d.nome;\n      }).attr(\"text-anchor\", \"middle\").attr('x', 0).attr('y', function (d) {\n        return node_size(d) + 16;\n      }).attr(\"opacity\", 0).transition(t).delay(function (d, i) {\n        return node_delay(d.tipo, i + 10);\n      }).attr(\"opacity\", 1);\n      labels.exit().remove(); // LINKS\n\n      links.exit().remove();\n      links.enter().append(\"path\").attr(\"class\", \"link\").attr(\"class\", function (d) {\n        var itemName = d.context ? d.context : d.rel_ids; // return d3.select(this).attr(\"class\") + ' link-' + d.base  + \" \" + \"link-\" + d.context\n\n        return d3__WEBPACK_IMPORTED_MODULE_5__.select(this).attr(\"class\") + ' link-' + d.base + \" \" + \"link-\" + itemName;\n      }).attr(\"style\", function (d) {\n        console.log('all', d.target); // return !d.target.show ? \"display: none\" : null;\n\n        d.show.map(function (item) {\n          console.log('line', item.id); // return !d.show ? \"display: none\" : null;\n        }); // \n      }).attr(\"opacity\", 0).transition(t).delay(4000).attr(\"opacity\", 1);\n      simulation.nodes(data_n).force(\"link\").links(data_l);\n      ticked();\n    }\n\n    function ticked() {\n      simulation.alpha(0);\n\n      var nodes = _nodes.selectAll('.node');\n\n      var links = _links.selectAll('.link');\n\n      var labels = _labels.selectAll('.label');\n\n      if (nodes) {\n        nodes.attr(\"transform\", function (d) {\n          // console.log('nodes', d)\n          return \"translate(\" + d.x + \",\" + d.y + \")\";\n        });\n      }\n\n      if (links) {\n        links.attr(\"d\", positionLink);\n      }\n\n      if (labels) {\n        labels.attr(\"transform\", function (d) {\n          // console.log('labels', d)\n          return \"translate(\" + d.x + \",\" + d.y + \")\";\n        });\n      }\n    }\n\n    function positionLink(d) {\n      var offset = 30 * d.linkNum;\n      var midpoint_x = (d.source.x + d.target.x) / 2;\n      var midpoint_y = (d.source.y + d.target.y) / 2;\n      var dx = d.target.x - d.source.x;\n      var dy = d.target.y - d.source.y;\n      var normalise = Math.sqrt(dx * dx + dy * dy);\n      var offSetX = midpoint_x + offset * (dy / normalise);\n      var offSetY = midpoint_y - offset * (dx / normalise);\n      return \"M\" + d.source.x + \",\" + d.source.y + \"S\" + offSetX + \",\" + offSetY + \" \" + d.target.x + \",\" + d.target.y;\n    } // DRAG\n\n\n    var drag_handler = d3__WEBPACK_IMPORTED_MODULE_5__.drag().on(\"start\", drag_start).on(\"drag\", drag_drag).on(\"end\", drag_end);\n\n    function drag_start(d) {\n      if (!d3__WEBPACK_IMPORTED_MODULE_5__.event.active) simulation.alphaTarget(0.1).restart();\n      d.fx = d.x;\n      d.fy = d.y;\n    }\n\n    function drag_drag(d) {\n      d.fx = d3__WEBPACK_IMPORTED_MODULE_5__.event.x;\n      d.fy = d3__WEBPACK_IMPORTED_MODULE_5__.event.y;\n    }\n\n    function drag_end(d) {\n      if (!d3__WEBPACK_IMPORTED_MODULE_5__.event.active) simulation.alphaTarget(0.01);\n    }\n\n    function dblclick(d) {\n      d.fx = null;\n      d.fy = null;\n    } // ZOOM\n\n\n    var zoom_handler = d3__WEBPACK_IMPORTED_MODULE_5__.zoom().on(\"zoom\", zoom_actions);\n\n    function zoom_actions() {\n      viewport.attr(\"transform\", d3__WEBPACK_IMPORTED_MODULE_5__.event.transform);\n    } // RESIZE\n\n\n    function resize() {\n      width = ((0,_Applications_XAMPP_xamppfiles_htdocs_mapa_da_informacao_node_modules_next_node_modules_babel_runtime_helpers_esm_readOnlyError__WEBPACK_IMPORTED_MODULE_1__.default)(\"width\"), window.innerWidth);\n      height = ((0,_Applications_XAMPP_xamppfiles_htdocs_mapa_da_informacao_node_modules_next_node_modules_babel_runtime_helpers_esm_readOnlyError__WEBPACK_IMPORTED_MODULE_1__.default)(\"height\"), window.innerHeight);\n      svg.attr(\"width\", width).attr(\"height\", height);\n    } // EVENTS\n\n\n    function legenda_mouseover(d) {\n      if ($(window).width() < 768) return;\n      var svg_w = d3__WEBPACK_IMPORTED_MODULE_5__.select('.mapa-viewport').node().getBoundingClientRect().width;\n      var scale = svg_w / width;\n      var top = 0 + (d.height_area + 50) * scale; // 160\n\n      var left = 180;\n      d3__WEBPACK_IMPORTED_MODULE_5__.selectAll('.tooltip-title').text(d.title) // .style('color', d.node_color )\n      .style('color', d.color);\n      d3__WEBPACK_IMPORTED_MODULE_5__.selectAll('.tooltip-text').text(d.description);\n      tooltip.classed('show', true).style('top', top + 'px').transition().duration(100).style('left', left + 'px'); // fx.setText(d.description)\n\n      sound_over.play();\n    }\n\n    function legenda_mouseout(d) {\n      if ($(window).width() < 768) return;\n      tooltip.classed('show', false);\n    }\n\n    function node_mouseover(d, idx) {\n      if ($(window).width() < 768) return; // label\n\n      var text = d3__WEBPACK_IMPORTED_MODULE_5__.select('.label[label_id=\"' + d.id + '\"]');\n\n      if (_.indexOf([0, 1, 2, 3, 4, 5], d.tipo) != -1) {\n        // 'base','doc','orgao','ti'\n        text.classed('hidden', true);\n      } // links\n\n\n      d3__WEBPACK_IMPORTED_MODULE_5__.selectAll('.mapa').classed('highlight', true);\n      var itemName = d.context[idx] != undefined ? d.context : d.rel_ids; // const oi = d.context ? 'tem' : 'nao tem'\n      // console.log(itemName, oi,  d, d.context, d.context[idx])\n      // _.forEach(d.rel_ids, function(id){\n\n      _.forEach(itemName, function (id) {\n        d3__WEBPACK_IMPORTED_MODULE_5__.selectAll('.link.link-' + id).classed('highlight', true);\n        d3__WEBPACK_IMPORTED_MODULE_5__.selectAll('.node.node-' + id).classed('highlight', true);\n      }); // tooltip\n\n\n      var svg_w = d3__WEBPACK_IMPORTED_MODULE_5__.select('.mapa-viewport').node().getBoundingClientRect().width;\n      var scale = svg_w / width;\n      var top = d.y < height * .8 ? d.y * scale + (node_size(d) * 0.5 + 30) * scale + 0 // 160\n      : d.y * scale - (node_size(d) * scale + 90) + 0; // 160\n\n      var left = d.x < width * .75 ? (d.x + 20) * scale : (d.x - 20) * scale; // window safe area\n\n      left = Math.min(Math.max(180, left), width * scale - 180);\n      d3__WEBPACK_IMPORTED_MODULE_5__.selectAll('.tooltip-title').text(d.tipo_label).style('color', function () {\n        return d.color;\n      });\n      d3__WEBPACK_IMPORTED_MODULE_5__.selectAll('.tooltip-text').text(d.nomecompleto || d.nome);\n      tooltip.classed('show', true).style('top', top + 'px').transition().duration(100).style('left', left + 'px'); // fx.setText(d.nomecompleto || d.nome)\n\n      sound_over.play();\n    }\n\n    function node_mouseout(d, idx) {\n      if ($(window).width() < 768) return; // label\n\n      var text = d3__WEBPACK_IMPORTED_MODULE_5__.select('.label[label_id=\"' + d.id + '\"]');\n\n      if (_.indexOf([0, 1, 2, 3, 4, 5], d.tipo) != -1) {\n        // 'base','doc','orgao','ti'\n        text.classed('hidden', false);\n      } // links\n\n\n      d3__WEBPACK_IMPORTED_MODULE_5__.selectAll('.mapa').classed('highlight', false); // const itemName = d.context ? d.context : d.rel_ids\n\n      var itemName = d.context[idx] != undefined ? d.context : d.rel_ids; // _.forEach(d.rel_ids, function(id){\n\n      _.forEach(itemName, function (id) {\n        d3__WEBPACK_IMPORTED_MODULE_5__.selectAll('.link').classed('highlight', false);\n        d3__WEBPACK_IMPORTED_MODULE_5__.selectAll('.node').classed('highlight', false);\n      }); // tooltip\n      // fx.setText(d.nome)\n\n\n      d3__WEBPACK_IMPORTED_MODULE_5__.selectAll('.tooltip-text').text(d.nome);\n      tooltip.classed('show', false);\n    }\n\n    function node_click(d, idx) {\n      // const itemName = d.context ? d.context : d.rel_ids\n      var itemName = d.context[idx] != undefined ? d.context : d.rel_ids;\n      var name = d.context[idx] != undefined ? 'context' : 'ids';\n      sound_click.play();\n\n      if (current_id == d.id) {\n        closeInfo();\n      } else {\n        showInfo(d.tipo, d.id, itemName, name); // ga('send', 'event', 'node', 'click', d.tipo + \" - \" + d.nomecompleto) \n      }\n    } // INFO PANEL\n\n\n    var current_id = null;\n\n    function showInfo(tipo, id, context, name) {\n      var w = $(window).width();\n      var vis = d3__WEBPACK_IMPORTED_MODULE_5__.select(\".mapa\"); // const itemName = context[0] != undefined ? context : id\n\n      vis.classed(\"show-info\", true); // console.log(tipo, id, context)\n      // old\n\n      d3__WEBPACK_IMPORTED_MODULE_5__.selectAll('.link.show').classed('show', false);\n      d3__WEBPACK_IMPORTED_MODULE_5__.selectAll('.node.show').classed('show', false);\n      d3__WEBPACK_IMPORTED_MODULE_5__.selectAll('.label.show').classed('show', false); // new \n      // const itemName = d.context ? d.context : d.rel_ids\n      // console.log('oi', context, id)\n\n      var arr = _.filter(graph.data.links, function (o) {\n        return o.target == id || o.source == id;\n      });\n\n      var bases = name == 'context' ? _.uniq(_.map(arr, 'context')) : _.uniq(_.map(arr, 'base')); // const oi = context[0] != undefined ? 'context' : 'base'\n      // console.log(bases, oi)\n      // \"link-\" + d.context\n\n      _.forEach(bases, function (base) {\n        // _.forEach(bases, function(base){\n        d3__WEBPACK_IMPORTED_MODULE_5__.selectAll('.link.link-' + base).classed('show', true);\n        d3__WEBPACK_IMPORTED_MODULE_5__.selectAll('.node.node-' + base).classed('show', true);\n        d3__WEBPACK_IMPORTED_MODULE_5__.selectAll('.label.label-' + base).classed('show', true);\n      });\n\n      var info = w < 768 ? d3__WEBPACK_IMPORTED_MODULE_5__.select('.mapa-info-mobile') : d3__WEBPACK_IMPORTED_MODULE_5__.select('.mapa-info');\n      var content = w < 768 ? d3__WEBPACK_IMPORTED_MODULE_5__.select('.mapa-info-mobile-content') : d3__WEBPACK_IMPORTED_MODULE_5__.select('.mapa-info-content');\n      info.classed('is-loading', true);\n      content.html('');\n      var items = array_node.filter(function (item) {\n        return item.id == id;\n      });\n      items.map(function (item) {\n        content.html(\"\\n\\t\\t\\t\\t\\t  <h3 class=\\\"title\\\">\".concat(item.nomecompleto, \"</h3>\\n\\n\\t\\t\\t\\t\\t\\t\").concat(item.decription, \"\\n\\n\\t\\t\\t\\t\\t\\t\").concat(item.button_link ? \"<a href=\\\"\".concat(item.button_link, \"\\\" target=\\\"_blank\\\" class=\\\"btn\\\">\\n\\t\\t\\t\\t\\t\\t  <span>\").concat(item.button_text, \"</span>\\n\\t\\t\\t\\t\\t\\t\\t\").concat(item.button_icon ? \"<img src=\\\"\".concat(item.button_icon, \"\\\" alt=\\\"\").concat(item.button_text, \"\\\" />\") : '', \"\\n\\t\\t\\t\\t\\t\\t</a>\") : '', \"\\n\\t\\t\\t\\t\\t\"));\n        info.classed('is-loading', false);\n      });\n      current_id = id;\n    }\n\n    function closeInfo() {\n      var w = $(window).width();\n      var vis = d3__WEBPACK_IMPORTED_MODULE_5__.select(\".mapa\");\n      vis.classed(\"show-info\", false);\n      d3__WEBPACK_IMPORTED_MODULE_5__.selectAll('.link.show').classed('show', false);\n      d3__WEBPACK_IMPORTED_MODULE_5__.selectAll('.node.show').classed('show', false);\n      d3__WEBPACK_IMPORTED_MODULE_5__.selectAll('.label.show').classed('show', false);\n      current_id = null;\n\n      if (w < 768) {\n        d3__WEBPACK_IMPORTED_MODULE_5__.select('.mapa-info-mobile-content').html('');\n      }\n    }\n\n    d3__WEBPACK_IMPORTED_MODULE_5__.select(\".mapa-info-close\").on(\"click\", function (e) {\n      d3__WEBPACK_IMPORTED_MODULE_5__.event.preventDefault();\n      sound_click.play();\n      closeInfo();\n    });\n\n    function exportcsv() {\n      var s = '';\n      graph.nodes.map(function (el) {\n        s += ((0,_Applications_XAMPP_xamppfiles_htdocs_mapa_da_informacao_node_modules_next_node_modules_babel_runtime_helpers_esm_readOnlyError__WEBPACK_IMPORTED_MODULE_1__.default)(\"s\"), el.tipo + ',' + el.id + ',' + el.nome + ',' + el.nomecompleto + ',' + Math.round(el.x) + ',' + Math.round(el.y) + '\\n');\n      });\n    }\n  });\n  return /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_styled__WEBPACK_IMPORTED_MODULE_4__.Wrapper, {\n    children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"section\", {\n      className: \"mapa exit\",\n      children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"mapa-viewport\",\n        children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n          className: \"mapa-vis\",\n          ref: ref,\n          width: \"1280\",\n          height: \"960\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 806,\n          columnNumber: 11\n        }, this), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n          className: \"tooltip\",\n          children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"tooltip-wrapper\",\n            children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n              className: \"tooltip-title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 809,\n              columnNumber: 15\n            }, this), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n              className: \"tooltip-text\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 810,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 808,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 807,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 805,\n        columnNumber: 9\n      }, this), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"mapa-info\",\n        children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"a\", {\n          href: \"#\",\n          className: \"mapa-info-close\",\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 816,\n          columnNumber: 11\n        }, this), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n          className: \"mapa-info-content\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 817,\n          columnNumber: 11\n        }, this), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n          className: \"loading\",\n          children: \"...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 818,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 815,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 804,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 803,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Chart, \"fDa5EqLzOtqKLGyikm2c4wjxss4=\", false, function () {\n  return [_hooks_useScript__WEBPACK_IMPORTED_MODULE_3__.default, _hooks_useScript__WEBPACK_IMPORTED_MODULE_3__.default, _hooks_useScript__WEBPACK_IMPORTED_MODULE_3__.default, _hooks_useScript__WEBPACK_IMPORTED_MODULE_3__.default, _hooks_useScript__WEBPACK_IMPORTED_MODULE_3__.default, _hooks_useScript__WEBPACK_IMPORTED_MODULE_3__.default, _hooks_useScript__WEBPACK_IMPORTED_MODULE_3__.default, _hooks_useD3__WEBPACK_IMPORTED_MODULE_2__.useD3];\n});\n\n_c = Chart;\n/* harmony default export */ __webpack_exports__[\"default\"] = (Chart);\n\nvar _c;\n\n$RefreshReg$(_c, \"Chart\");\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./pages/components/Map/index.js\n");

/***/ })

});