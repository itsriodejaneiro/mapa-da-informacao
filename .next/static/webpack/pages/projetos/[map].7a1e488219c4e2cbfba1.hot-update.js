/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/projetos/[map]",{

/***/ "./pages/components/Map/index.js":
/*!***************************************!*\
  !*** ./pages/components/Map/index.js ***!
  \***************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _Applications_XAMPP_xamppfiles_htdocs_mapa_da_informacao_node_modules_next_node_modules_babel_runtime_helpers_esm_readOnlyError__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/next/node_modules/@babel/runtime/helpers/esm/readOnlyError */ \"./node_modules/next/node_modules/@babel/runtime/helpers/esm/readOnlyError.js\");\n/* harmony import */ var _hooks_useD3__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../hooks/useD3 */ \"./hooks/useD3.js\");\n/* harmony import */ var _hooks_useScript__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../hooks/useScript */ \"./hooks/useScript.js\");\n/* harmony import */ var _styled__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./styled */ \"./pages/components/Map/styled.js\");\n/* harmony import */ var d3__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! d3 */ \"./node_modules/d3/build/d3.js\");\n/* harmony import */ var d3__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(d3__WEBPACK_IMPORTED_MODULE_5__);\n/* module decorator */ module = __webpack_require__.hmd(module);\n\n\n\nvar _jsxFileName = \"/Applications/XAMPP/xamppfiles/htdocs/mapa-da-informacao/pages/components/Map/index.js\",\n    _s = $RefreshSig$();\n\n\n\n\n\n\nfunction Chart(_ref) {\n  _s();\n\n  var data = _ref.data,\n      query = _ref.query,\n      baseUrl = _ref.baseUrl;\n  (0,_hooks_useScript__WEBPACK_IMPORTED_MODULE_3__.default)('https://cdn.jsdelivr.net/npm/lodash@4.17.10/lodash.min.js');\n  (0,_hooks_useScript__WEBPACK_IMPORTED_MODULE_3__.default)('https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js');\n  (0,_hooks_useScript__WEBPACK_IMPORTED_MODULE_3__.default)('https://cdnjs.cloudflare.com/ajax/libs/howler/2.0.14/howler.core.min.js');\n  (0,_hooks_useScript__WEBPACK_IMPORTED_MODULE_3__.default)('https://cdnjs.cloudflare.com/ajax/libs/handlebars.js/4.0.11/handlebars.min.js');\n  (0,_hooks_useScript__WEBPACK_IMPORTED_MODULE_3__.default)('../vendors/jquery.mousewheel.min.js');\n  (0,_hooks_useScript__WEBPACK_IMPORTED_MODULE_3__.default)('../vendors/browser.js');\n  (0,_hooks_useScript__WEBPACK_IMPORTED_MODULE_3__.default)('../vendors/main.js');\n  var ref = (0,_hooks_useD3__WEBPACK_IMPORTED_MODULE_2__.useD3)(function (svg) {\n    var width = 1280; // window.innerWidth,\n\n    var height = 960; // window.innerHeight;\n    // let category = data.categories\n    // category.filter(word => word.show == false);\n    // console.log(category)\n\n    var svg = d3__WEBPACK_IMPORTED_MODULE_5__.select(\".mapa-vis\").attr(\"preserveAspectRatio\", \"xMinYMin meet\").attr(\"viewBox\", \"0 0 \".concat(width, \" \").concat(height));\n    svg.append(\"rect\").attr(\"class\", \"vis-background\").attr(\"width\", width).attr(\"height\", height).on(\"click\", function () {\n      closeInfo();\n    });\n    var viewport = svg.append(\"g\").attr(\"class\", \"viewport\");\n    var simulation = d3__WEBPACK_IMPORTED_MODULE_5__.forceSimulation().force(\"link\", d3__WEBPACK_IMPORTED_MODULE_5__.forceLink().id(function (d) {\n      return d.id;\n    })); // Tooltip\n\n    var tooltip = d3__WEBPACK_IMPORTED_MODULE_5__.select('.tooltip'); // var fx = new TextScramble(document.querySelector('.tooltip-text'), 15)\n    // var fxto = null\n    // UTILS\n\n    var color = d3__WEBPACK_IMPORTED_MODULE_5__.scaleOrdinal(d3__WEBPACK_IMPORTED_MODULE_5__.schemeCategory20);\n    var paleta = ['#c9b2fa', '#ae92e9', '#725f96', '#ffc28f', '#af7744', '#ffc28f']; // const temp = {\n    // \t0 : { size: 16, cluster: { y: 0.3, k: 4, size: 100 }, delay: 0, color: paleta[0] }, // doc\n    // \t1 : { size:  5, cluster: { y: 1.2, k: 2, size:  60 }, delay: 1, color: paleta[1] }, // app\n    // \t2 : { size: 20, cluster: { y: 3.0, k: 4, size: 200 }, delay: 2, color: paleta[2] }, // base\n    // \t3 : { size: 12, cluster: { y: 4.2, k: 3, size:  60 }, delay: 3, color: paleta[3] }, // ti\n    // \t4 : { size: 16, cluster: { y: 5.4, k: 3, size:  80 }, delay: 3, color: paleta[4] }, // orgao\n    // \t5 : { size:  5, cluster: { y: 7.0, k: 4, size: 100 }, delay: 5, color: paleta[5] }, // politica\n    // }\n\n    var temp = {\n      0: {\n        cluster: {\n          y: 0.3,\n          k: 4\n        },\n        delay: 0\n      },\n      // doc\n      1: {\n        cluster: {\n          y: 1.2,\n          k: 2\n        },\n        delay: 1\n      },\n      // app\n      2: {\n        cluster: {\n          y: 3.0,\n          k: 4\n        },\n        delay: 2\n      },\n      // base\n      3: {\n        cluster: {\n          y: 4.2,\n          k: 3\n        },\n        delay: 3\n      },\n      // ti\n      4: {\n        cluster: {\n          y: 5.4,\n          k: 3\n        },\n        delay: 3\n      },\n      // orgao\n      5: {\n        cluster: {\n          y: 7.0,\n          k: 4\n        },\n        delay: 5\n      } // politica\n\n    };\n\n    function node_size(d) {\n      // console.log(d)\n      // return temp[d.tipo].size + d.weight\n      return d.min_size + d.weight;\n    } // function node_color(t){\n    // \treturn temp[t].color\n    // }\n    // function node_cluster(t){\n    // \treturn temp[t].cluster.y\n    // }\n\n\n    function node_delay(t, i) {\n      return temp[t].delay * 100 + i * 50;\n    }\n\n    var orgao_scale = d3__WEBPACK_IMPORTED_MODULE_5__.scaleLinear().domain([1, 4]).range(['#fcd9b2', '#e07145']).interpolate(d3__WEBPACK_IMPORTED_MODULE_5__.interpolateHcl);\n    var legendas = data.categories; // console.log(data, legendas)\n\n    var legendas_g = viewport.append(\"g\").attr(\"class\", \"legenda\").selectAll('g').data(legendas);\n    var legenda = legendas_g.enter().append('g');\n    legenda.append('line').attr(\"class\", 'legenda-line').attr(\"x1\", 20).attr(\"y1\", function (d) {\n      return d.height_area;\n    }).attr(\"x2\", width - 20).attr(\"y2\", function (d) {\n      return d.height_area;\n    });\n    legenda.append('text').attr(\"class\", 'legenda-text').text(function (d) {\n      return d.title;\n    }).attr('x', 20).attr('y', function (d) {\n      return d.height_area + 25;\n    }).on(\"mouseover\", legenda_mouseover).on(\"mouseout\", legenda_mouseout); // GRAPH\n\n    var graph = {};\n\n    var _links = viewport.append(\"g\").attr(\"class\", \"links\");\n\n    var _nodes = viewport.append(\"g\").attr(\"class\", \"nodes\");\n\n    var _labels = viewport.append(\"g\").attr(\"class\", \"labels\");\n\n    var array_node = [];\n    var array_link = [];\n    var url = \"\".concat(baseUrl, \"maps/\").concat(query, \"/\");\n    d3__WEBPACK_IMPORTED_MODULE_5__.json(url, function (json) {\n      var category = json.categories;\n      var mapping = json.node_mapping; // console.log('category', category)\n      // if()\n\n      category.map(function (nodes, idx) {\n        var node = nodes.nodes; // console.log('nodes', nodes)\n        // if(nodes.show){\n\n        node.map(function (item, index) {\n          // console.log('temp', index, )\n          array_node.push({\n            show: nodes.show,\n            id: item.id,\n            nome: item.label,\n            nomecompleto: item.title,\n            color: nodes.node_color ? nodes.node_color : idx < 6 ? paleta[idx] : '#c9b2fa',\n            tipo: nodes.order ? nodes.order : idx,\n            tipo_label: nodes.title,\n            decription: item.text ? item.text : '',\n            button_icon: item.button_icon ? item.button_icon.url : null,\n            button_link: item.button_link ? item.button_link : null,\n            button_text: item.button_text ? item.button_text : null,\n            x: item.x_position ? item.x_position + 160 : 160,\n            y: item.y_position ? item.y_position + nodes.height_area : nodes.height_area + 20,\n            min_size: nodes.min_size ? nodes.min_size : 5,\n            max_size: nodes.max_size ? nodes.max_size : 50\n          });\n        }); //}\n      }); // }\n\n      var _nodes = array_node;\n      var _nodesori = [];\n      array_node.map(function (o) {\n        _nodesori.push(o);\n      }); // console.log(array_node)\n\n      mapping.map(function (links) {\n        var result = array_node.filter(function (word) {\n          return word.id == links.source.id;\n        }); // console.log(links)\n\n        array_link.push({\n          base: links.source.id,\n          // relation: result[0] ? result[0].tipo : 0,\n          relation: result[0].tipo,\n          source: links.source.id,\n          target: links.target.id,\n          context: links.context\n        });\n      });\n      var _relations = array_link;\n      var _links = [];\n      var _linksori = [];\n\n      _relations.map(function (d) {\n        _links.push({\n          base: d.base,\n          source: d.source,\n          relation: d.relation,\n          target: d.target,\n          context: d.context\n        });\n\n        _linksori.push({\n          base: d.base,\n          source: d.source,\n          relation: d.relation,\n          target: d.target,\n          context: d.context\n        });\n      });\n\n      var k = {\n        0: 0,\n        // doc\n        1: 0,\n        // app\n        2: 0,\n        // base\n        3: 0,\n        // ti\n        4: 0,\n        // orgao\n        5: 0 // politica\n\n      };\n\n      _nodes.map(function (d) {\n        // console.log(d)\n        // const loop = temp[d.tipo].cluster.size\n        var loop = d.max_size;\n        var step = loop / temp[d.tipo].cluster.k;\n        d.offsetY = k[d.tipo];\n        k[d.tipo] += step;\n        k[d.tipo] = k[d.tipo] % loop;\n        d.x = Number(d.x);\n        d.y = Number(d.y);\n\n        var arr = _.filter(_linksori, function (o) {\n          return o.target == d.id || o.source == d.id;\n        }); // d.color = node_color(d.tipo)\n\n\n        d.rel_ids = _.uniq(_.map(arr, 'base'));\n        d.context = _.uniq(_.map(arr, 'context')); // console.log(arr)\n\n        if (d.tipo == 3) {\n          var arr2 = _.filter(arr, function (o) {\n            return o.relation == 4;\n          });\n\n          d.weight = arr2.length * 4;\n        } else {\n          d.weight = arr.length;\n        } // console.log(d)\n\n      }); // MULTIPLE LINKS: START\n\n\n      _.each(_links, function (link) {\n        var same = _.filter(_links, {\n          'source': link.source,\n          'target': link.target\n        });\n\n        _.each(same, function (s, i) {\n          if (!s.linkNum) {\n            s.linkNum = i + 1;\n          }\n        });\n      }); // MULTIPLE LINKS: END\n\n\n      graph.nodes = _nodes;\n      graph.links = _links;\n      graph.data = {};\n      graph.data.nodes = _nodesori;\n      graph.data.links = _linksori; // console.log(_links)\n      // if(data_n.show){\n\n      update(graph.nodes, graph.links); // }\n    });\n\n    function update(data_n, data_l) {\n      var t = d3__WEBPACK_IMPORTED_MODULE_5__.transition().duration(750);\n\n      var nodes = _nodes.selectAll('.node').data(data_n, function (d) {\n        return d.id;\n      });\n\n      var labels = _labels.selectAll('.label').data(data_n, function (d) {\n        return d.id;\n      });\n\n      var links = _links.selectAll('.link').data(data_l, function (d) {\n        return d.source + '_' + d.target;\n      }); // console.log(data_n)\n      // NODES\n\n\n      nodes.exit().transition(t).attr(\"r\", 1e-6).remove();\n      nodes.enter().append(\"g\").attr(\"class\", function (d) {\n        var itemName = d.context ? d.context : d.rel_ids; // return \"node node-\" + d.id + \" \" + d.rel_ids.join(\" \") + \" \" + \"node-\" + d.context.join(\" node-\")\n\n        return \"node node-\" + d.id + \" \" + d.rel_ids.join(\" \") + \" \" + \"node-\" + itemName.join(\" node-\");\n      }).attr('node_id', function (d) {\n        return d.id;\n      }).append(\"circle\").attr(\"r\", 0).on(\"mouseover\", node_mouseover).on(\"mouseout\", node_mouseout).on(\"click\", node_click).transition(t).delay(function (d, i) {\n        return node_delay(d.tipo, i);\n      }).attr(\"r\", function (d) {\n        return node_size(d);\n      }).attr(\"fill\", function (d) {\n        return d.color;\n      }); // LABELS\n\n      labels.enter().append(\"g\").attr(\"class\", function (d) {\n        var itemName = d.context ? d.context : d.rel_ids; // return \"label node-\" + d.tipo + \" label-\" + d.id + \" \" + d.rel_ids.join(\" \") + \" \" + \"label-\" + d.context.join(\" label-\")\n\n        return \"label node-\" + d.tipo + \" label-\" + d.id + \" \" + d.rel_ids.join(\" \") + \" \" + \"label-\" + itemName.join(\" label-\");\n      }).attr('label_id', function (d) {\n        return d.id;\n      }).attr('label_nome', function (d) {\n        return d.nome;\n      }).append(\"text\").text(function (d) {\n        var size = node_size(d);\n        return size <= 10 ? '' : d.nome;\n      }).attr(\"text-anchor\", \"middle\").attr('x', 0).attr('y', function (d) {\n        return node_size(d) + 16;\n      }).attr(\"opacity\", 0).transition(t).delay(function (d, i) {\n        return node_delay(d.tipo, i + 10);\n      }).attr(\"opacity\", 1);\n      labels.exit().remove(); // LINKS\n\n      links.exit().remove();\n      links.enter().append(\"path\").attr(\"class\", \"link\").attr(\"class\", function (d) {\n        var itemName = d.context ? d.context : d.rel_ids; // return d3.select(this).attr(\"class\") + ' link-' + d.base  + \" \" + \"link-\" + d.context\n\n        return d3__WEBPACK_IMPORTED_MODULE_5__.select(this).attr(\"class\") + ' link-' + d.base + \" \" + \"link-\" + itemName;\n      }).attr(\"opacity\", 0).transition(t).delay(4000).attr(\"opacity\", 1);\n      simulation.nodes(data_n).force(\"link\").links(data_l);\n      ticked();\n    }\n\n    function ticked() {\n      simulation.alpha(0);\n\n      var nodes = _nodes.selectAll('.node');\n\n      var links = _links.selectAll('.link');\n\n      var labels = _labels.selectAll('.label');\n\n      if (nodes) {\n        nodes.attr(\"transform\", function (d) {\n          return \"translate(\" + d.x + \",\" + d.y + \")\";\n        });\n      }\n\n      if (links) {\n        links.attr(\"d\", positionLink);\n      }\n\n      if (labels) {\n        labels.attr(\"transform\", function (d) {\n          return \"translate(\" + d.x + \",\" + d.y + \")\";\n        });\n      }\n    }\n\n    function positionLink(d) {\n      var offset = 30 * d.linkNum;\n      var midpoint_x = (d.source.x + d.target.x) / 2;\n      var midpoint_y = (d.source.y + d.target.y) / 2;\n      var dx = d.target.x - d.source.x;\n      var dy = d.target.y - d.source.y;\n      var normalise = Math.sqrt(dx * dx + dy * dy);\n      var offSetX = midpoint_x + offset * (dy / normalise);\n      var offSetY = midpoint_y - offset * (dx / normalise);\n      return \"M\" + d.source.x + \",\" + d.source.y + \"S\" + offSetX + \",\" + offSetY + \" \" + d.target.x + \",\" + d.target.y;\n    } // DRAG\n\n\n    var drag_handler = d3__WEBPACK_IMPORTED_MODULE_5__.drag().on(\"start\", drag_start).on(\"drag\", drag_drag).on(\"end\", drag_end);\n\n    function drag_start(d) {\n      if (!d3__WEBPACK_IMPORTED_MODULE_5__.event.active) simulation.alphaTarget(0.1).restart();\n      d.fx = d.x;\n      d.fy = d.y;\n    }\n\n    function drag_drag(d) {\n      d.fx = d3__WEBPACK_IMPORTED_MODULE_5__.event.x;\n      d.fy = d3__WEBPACK_IMPORTED_MODULE_5__.event.y;\n    }\n\n    function drag_end(d) {\n      if (!d3__WEBPACK_IMPORTED_MODULE_5__.event.active) simulation.alphaTarget(0.01);\n    }\n\n    function dblclick(d) {\n      d.fx = null;\n      d.fy = null;\n    } // ZOOM\n\n\n    var zoom_handler = d3__WEBPACK_IMPORTED_MODULE_5__.zoom().on(\"zoom\", zoom_actions);\n\n    function zoom_actions() {\n      viewport.attr(\"transform\", d3__WEBPACK_IMPORTED_MODULE_5__.event.transform);\n    } // RESIZE\n\n\n    function resize() {\n      width = ((0,_Applications_XAMPP_xamppfiles_htdocs_mapa_da_informacao_node_modules_next_node_modules_babel_runtime_helpers_esm_readOnlyError__WEBPACK_IMPORTED_MODULE_1__.default)(\"width\"), window.innerWidth);\n      height = ((0,_Applications_XAMPP_xamppfiles_htdocs_mapa_da_informacao_node_modules_next_node_modules_babel_runtime_helpers_esm_readOnlyError__WEBPACK_IMPORTED_MODULE_1__.default)(\"height\"), window.innerHeight);\n      svg.attr(\"width\", width).attr(\"height\", height);\n    } // EVENTS\n\n\n    function legenda_mouseover(d) {\n      if ($(window).width() < 768) return;\n      var svg_w = d3__WEBPACK_IMPORTED_MODULE_5__.select('.mapa-viewport').node().getBoundingClientRect().width;\n      var scale = svg_w / width;\n      var top = 0 + (d.height_area + 50) * scale; // 160\n\n      var left = 180;\n      d3__WEBPACK_IMPORTED_MODULE_5__.selectAll('.tooltip-title').text(d.title) // .style('color', d.node_color )\n      .style('color', d.color);\n      d3__WEBPACK_IMPORTED_MODULE_5__.selectAll('.tooltip-text').text(d.description);\n      tooltip.classed('show', true).style('top', top + 'px').transition().duration(100).style('left', left + 'px'); // fx.setText(d.description)\n\n      sound_over.play();\n    }\n\n    function legenda_mouseout(d) {\n      if ($(window).width() < 768) return;\n      tooltip.classed('show', false);\n    }\n\n    function node_mouseover(d, idx) {\n      if ($(window).width() < 768) return; // label\n\n      var text = d3__WEBPACK_IMPORTED_MODULE_5__.select('.label[label_id=\"' + d.id + '\"]');\n\n      if (_.indexOf([0, 1, 2, 3, 4, 5], d.tipo) != -1) {\n        // 'base','doc','orgao','ti'\n        text.classed('hidden', true);\n      } // links\n\n\n      d3__WEBPACK_IMPORTED_MODULE_5__.selectAll('.mapa').classed('highlight', true);\n      var itemName = d.context[idx] != undefined ? d.context : d.rel_ids; // const oi = d.context ? 'tem' : 'nao tem'\n      // console.log(itemName, oi,  d, d.context, d.context[idx])\n      // _.forEach(d.rel_ids, function(id){\n\n      _.forEach(itemName, function (id) {\n        d3__WEBPACK_IMPORTED_MODULE_5__.selectAll('.link.link-' + id).classed('highlight', true);\n        d3__WEBPACK_IMPORTED_MODULE_5__.selectAll('.node.node-' + id).classed('highlight', true);\n      }); // tooltip\n\n\n      var svg_w = d3__WEBPACK_IMPORTED_MODULE_5__.select('.mapa-viewport').node().getBoundingClientRect().width;\n      var scale = svg_w / width;\n      var top = d.y < height * .8 ? d.y * scale + (node_size(d) * 0.5 + 30) * scale + 0 // 160\n      : d.y * scale - (node_size(d) * scale + 90) + 0; // 160\n\n      var left = d.x < width * .75 ? (d.x + 20) * scale : (d.x - 20) * scale; // window safe area\n\n      left = Math.min(Math.max(180, left), width * scale - 180);\n      d3__WEBPACK_IMPORTED_MODULE_5__.selectAll('.tooltip-title').text(d.tipo_label).style('color', function () {\n        return d.color;\n      });\n      d3__WEBPACK_IMPORTED_MODULE_5__.selectAll('.tooltip-text').text(d.nomecompleto || d.nome);\n      tooltip.classed('show', true).style('top', top + 'px').transition().duration(100).style('left', left + 'px'); // fx.setText(d.nomecompleto || d.nome)\n\n      sound_over.play();\n    }\n\n    function node_mouseout(d, idx) {\n      if ($(window).width() < 768) return; // label\n\n      var text = d3__WEBPACK_IMPORTED_MODULE_5__.select('.label[label_id=\"' + d.id + '\"]');\n\n      if (_.indexOf([0, 1, 2, 3, 4, 5], d.tipo) != -1) {\n        // 'base','doc','orgao','ti'\n        text.classed('hidden', false);\n      } // links\n\n\n      d3__WEBPACK_IMPORTED_MODULE_5__.selectAll('.mapa').classed('highlight', false); // const itemName = d.context ? d.context : d.rel_ids\n\n      var itemName = d.context[idx] != undefined ? d.context : d.rel_ids; // _.forEach(d.rel_ids, function(id){\n\n      _.forEach(itemName, function (id) {\n        d3__WEBPACK_IMPORTED_MODULE_5__.selectAll('.link').classed('highlight', false);\n        d3__WEBPACK_IMPORTED_MODULE_5__.selectAll('.node').classed('highlight', false);\n      }); // tooltip\n      // fx.setText(d.nome)\n\n\n      d3__WEBPACK_IMPORTED_MODULE_5__.selectAll('.tooltip-text').text(d.nome);\n      tooltip.classed('show', false);\n    }\n\n    function node_click(d, idx) {\n      // const itemName = d.context ? d.context : d.rel_ids\n      var itemName = d.context[idx] != undefined ? d.context : d.rel_ids;\n      var name = d.context[idx] != undefined ? 'context' : 'ids';\n      sound_click.play();\n\n      if (current_id == d.id) {\n        closeInfo();\n      } else {\n        showInfo(d.tipo, d.id, itemName, name); // ga('send', 'event', 'node', 'click', d.tipo + \" - \" + d.nomecompleto) \n      }\n    } // INFO PANEL\n\n\n    var current_id = null;\n\n    function showInfo(tipo, id, context, name) {\n      var w = $(window).width();\n      var vis = d3__WEBPACK_IMPORTED_MODULE_5__.select(\".mapa\"); // const itemName = context[0] != undefined ? context : id\n\n      vis.classed(\"show-info\", true); // console.log(tipo, id, context)\n      // old\n\n      d3__WEBPACK_IMPORTED_MODULE_5__.selectAll('.link.show').classed('show', false);\n      d3__WEBPACK_IMPORTED_MODULE_5__.selectAll('.node.show').classed('show', false);\n      d3__WEBPACK_IMPORTED_MODULE_5__.selectAll('.label.show').classed('show', false); // new \n      // const itemName = d.context ? d.context : d.rel_ids\n      // console.log('oi', context, id)\n\n      var arr = _.filter(graph.data.links, function (o) {\n        return o.target == id || o.source == id;\n      });\n\n      var bases = name == 'context' ? _.uniq(_.map(arr, 'context')) : _.uniq(_.map(arr, 'base')); // const oi = context[0] != undefined ? 'context' : 'base'\n      // console.log(bases, oi)\n      // \"link-\" + d.context\n\n      _.forEach(bases, function (base) {\n        // _.forEach(bases, function(base){\n        d3__WEBPACK_IMPORTED_MODULE_5__.selectAll('.link.link-' + base).classed('show', true);\n        d3__WEBPACK_IMPORTED_MODULE_5__.selectAll('.node.node-' + base).classed('show', true);\n        d3__WEBPACK_IMPORTED_MODULE_5__.selectAll('.label.label-' + base).classed('show', true);\n      });\n\n      var info = w < 768 ? d3__WEBPACK_IMPORTED_MODULE_5__.select('.mapa-info-mobile') : d3__WEBPACK_IMPORTED_MODULE_5__.select('.mapa-info');\n      var content = w < 768 ? d3__WEBPACK_IMPORTED_MODULE_5__.select('.mapa-info-mobile-content') : d3__WEBPACK_IMPORTED_MODULE_5__.select('.mapa-info-content');\n      info.classed('is-loading', true);\n      content.html('');\n      var items = array_node.filter(function (item) {\n        return item.id == id;\n      });\n      items.map(function (item) {\n        content.html(\"\\n\\t\\t\\t\\t\\t  <h3 class=\\\"title\\\">\".concat(item.nomecompleto, \"</h3>\\n\\n\\t\\t\\t\\t\\t\\t\").concat(item.decription, \"\\n\\n\\t\\t\\t\\t\\t\\t\").concat(item.button_link ? \"<a href=\\\"\".concat(item.button_link, \"\\\" target=\\\"_blank\\\" class=\\\"btn\\\">\\n\\t\\t\\t\\t\\t\\t  <span>\").concat(item.button_text, \"</span>\\n\\t\\t\\t\\t\\t\\t\\t\").concat(item.button_icon ? \"<img src=\\\"\".concat(item.button_icon, \"\\\" alt=\\\"\").concat(item.button_text, \"\\\" />\") : '', \"\\n\\t\\t\\t\\t\\t\\t</a>\") : '', \"\\n\\t\\t\\t\\t\\t\"));\n        info.classed('is-loading', false);\n      });\n      current_id = id;\n    }\n\n    function closeInfo() {\n      var w = $(window).width();\n      var vis = d3__WEBPACK_IMPORTED_MODULE_5__.select(\".mapa\");\n      vis.classed(\"show-info\", false);\n      d3__WEBPACK_IMPORTED_MODULE_5__.selectAll('.link.show').classed('show', false);\n      d3__WEBPACK_IMPORTED_MODULE_5__.selectAll('.node.show').classed('show', false);\n      d3__WEBPACK_IMPORTED_MODULE_5__.selectAll('.label.show').classed('show', false);\n      current_id = null;\n\n      if (w < 768) {\n        d3__WEBPACK_IMPORTED_MODULE_5__.select('.mapa-info-mobile-content').html('');\n      }\n    }\n\n    d3__WEBPACK_IMPORTED_MODULE_5__.select(\".mapa-info-close\").on(\"click\", function (e) {\n      d3__WEBPACK_IMPORTED_MODULE_5__.event.preventDefault();\n      sound_click.play();\n      closeInfo();\n    });\n\n    function exportcsv() {\n      var s = '';\n      graph.nodes.map(function (el) {\n        s += ((0,_Applications_XAMPP_xamppfiles_htdocs_mapa_da_informacao_node_modules_next_node_modules_babel_runtime_helpers_esm_readOnlyError__WEBPACK_IMPORTED_MODULE_1__.default)(\"s\"), el.tipo + ',' + el.id + ',' + el.nome + ',' + el.nomecompleto + ',' + Math.round(el.x) + ',' + Math.round(el.y) + '\\n');\n      });\n    }\n  });\n  return /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_styled__WEBPACK_IMPORTED_MODULE_4__.Wrapper, {\n    children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"section\", {\n      className: \"mapa exit\",\n      children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"mapa-viewport\",\n        children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n          className: \"mapa-vis\",\n          ref: ref,\n          width: \"1280\",\n          height: \"960\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 681,\n          columnNumber: 11\n        }, this), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n          className: \"tooltip\",\n          children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"tooltip-wrapper\",\n            children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n              className: \"tooltip-title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 684,\n              columnNumber: 15\n            }, this), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n              className: \"tooltip-text\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 685,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 683,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 682,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 680,\n        columnNumber: 9\n      }, this), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"mapa-info\",\n        children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"a\", {\n          href: \"#\",\n          className: \"mapa-info-close\",\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 691,\n          columnNumber: 11\n        }, this), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n          className: \"mapa-info-content\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 692,\n          columnNumber: 11\n        }, this), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n          className: \"loading\",\n          children: \"...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 693,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 690,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 679,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 678,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Chart, \"fDa5EqLzOtqKLGyikm2c4wjxss4=\", false, function () {\n  return [_hooks_useScript__WEBPACK_IMPORTED_MODULE_3__.default, _hooks_useScript__WEBPACK_IMPORTED_MODULE_3__.default, _hooks_useScript__WEBPACK_IMPORTED_MODULE_3__.default, _hooks_useScript__WEBPACK_IMPORTED_MODULE_3__.default, _hooks_useScript__WEBPACK_IMPORTED_MODULE_3__.default, _hooks_useScript__WEBPACK_IMPORTED_MODULE_3__.default, _hooks_useScript__WEBPACK_IMPORTED_MODULE_3__.default, _hooks_useD3__WEBPACK_IMPORTED_MODULE_2__.useD3];\n});\n\n_c = Chart;\n/* harmony default export */ __webpack_exports__[\"default\"] = (Chart);\n\nvar _c;\n\n$RefreshReg$(_c, \"Chart\");\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vcGFnZXMvY29tcG9uZW50cy9NYXAvaW5kZXguanM/YTUxNCJdLCJuYW1lcyI6WyJDaGFydCIsImRhdGEiLCJxdWVyeSIsImJhc2VVcmwiLCJ1c2VTY3JpcHQiLCJyZWYiLCJ1c2VEMyIsInN2ZyIsIndpZHRoIiwiaGVpZ2h0IiwiZDMiLCJhdHRyIiwiYXBwZW5kIiwib24iLCJjbG9zZUluZm8iLCJ2aWV3cG9ydCIsInNpbXVsYXRpb24iLCJmb3JjZSIsImlkIiwiZCIsInRvb2x0aXAiLCJjb2xvciIsInBhbGV0YSIsInRlbXAiLCJjbHVzdGVyIiwieSIsImsiLCJkZWxheSIsIm5vZGVfc2l6ZSIsIm1pbl9zaXplIiwid2VpZ2h0Iiwibm9kZV9kZWxheSIsInQiLCJpIiwib3JnYW9fc2NhbGUiLCJkb21haW4iLCJyYW5nZSIsImludGVycG9sYXRlIiwibGVnZW5kYXMiLCJjYXRlZ29yaWVzIiwibGVnZW5kYXNfZyIsInNlbGVjdEFsbCIsImxlZ2VuZGEiLCJlbnRlciIsImhlaWdodF9hcmVhIiwidGV4dCIsInRpdGxlIiwibGVnZW5kYV9tb3VzZW92ZXIiLCJsZWdlbmRhX21vdXNlb3V0IiwiZ3JhcGgiLCJfbGlua3MiLCJfbm9kZXMiLCJfbGFiZWxzIiwiYXJyYXlfbm9kZSIsImFycmF5X2xpbmsiLCJ1cmwiLCJqc29uIiwiY2F0ZWdvcnkiLCJtYXBwaW5nIiwibm9kZV9tYXBwaW5nIiwibWFwIiwibm9kZXMiLCJpZHgiLCJub2RlIiwiaXRlbSIsImluZGV4IiwicHVzaCIsInNob3ciLCJub21lIiwibGFiZWwiLCJub21lY29tcGxldG8iLCJub2RlX2NvbG9yIiwidGlwbyIsIm9yZGVyIiwidGlwb19sYWJlbCIsImRlY3JpcHRpb24iLCJidXR0b25faWNvbiIsImJ1dHRvbl9saW5rIiwiYnV0dG9uX3RleHQiLCJ4IiwieF9wb3NpdGlvbiIsInlfcG9zaXRpb24iLCJtYXhfc2l6ZSIsIl9ub2Rlc29yaSIsIm8iLCJsaW5rcyIsInJlc3VsdCIsImZpbHRlciIsIndvcmQiLCJzb3VyY2UiLCJiYXNlIiwicmVsYXRpb24iLCJ0YXJnZXQiLCJjb250ZXh0IiwiX3JlbGF0aW9ucyIsIl9saW5rc29yaSIsImxvb3AiLCJzdGVwIiwib2Zmc2V0WSIsIk51bWJlciIsImFyciIsIl8iLCJyZWxfaWRzIiwidW5pcSIsImFycjIiLCJsZW5ndGgiLCJlYWNoIiwibGluayIsInNhbWUiLCJzIiwibGlua051bSIsInVwZGF0ZSIsImRhdGFfbiIsImRhdGFfbCIsImR1cmF0aW9uIiwibGFiZWxzIiwiZXhpdCIsInRyYW5zaXRpb24iLCJyZW1vdmUiLCJpdGVtTmFtZSIsImpvaW4iLCJub2RlX21vdXNlb3ZlciIsIm5vZGVfbW91c2VvdXQiLCJub2RlX2NsaWNrIiwic2l6ZSIsInRpY2tlZCIsImFscGhhIiwicG9zaXRpb25MaW5rIiwib2Zmc2V0IiwibWlkcG9pbnRfeCIsIm1pZHBvaW50X3kiLCJkeCIsImR5Iiwibm9ybWFsaXNlIiwiTWF0aCIsInNxcnQiLCJvZmZTZXRYIiwib2ZmU2V0WSIsImRyYWdfaGFuZGxlciIsImRyYWdfc3RhcnQiLCJkcmFnX2RyYWciLCJkcmFnX2VuZCIsImFscGhhVGFyZ2V0IiwicmVzdGFydCIsImZ4IiwiZnkiLCJkYmxjbGljayIsInpvb21faGFuZGxlciIsInpvb21fYWN0aW9ucyIsInJlc2l6ZSIsIndpbmRvdyIsImlubmVyV2lkdGgiLCJpbm5lckhlaWdodCIsIiQiLCJzdmdfdyIsImdldEJvdW5kaW5nQ2xpZW50UmVjdCIsInNjYWxlIiwidG9wIiwibGVmdCIsInN0eWxlIiwiZGVzY3JpcHRpb24iLCJjbGFzc2VkIiwic291bmRfb3ZlciIsInBsYXkiLCJpbmRleE9mIiwidW5kZWZpbmVkIiwiZm9yRWFjaCIsIm1pbiIsIm1heCIsIm5hbWUiLCJzb3VuZF9jbGljayIsImN1cnJlbnRfaWQiLCJzaG93SW5mbyIsInciLCJ2aXMiLCJiYXNlcyIsImluZm8iLCJjb250ZW50IiwiaHRtbCIsIml0ZW1zIiwiZSIs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QUE7QUFBQTtBQUFBLGdCQUZGO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxjQURMLGVBV0s7QUFBSyxpQkFBUyxFQUFDLFdBQWY7QUFBQSxnQ0FDRTtBQUFHLGNBQUksRUFBQyxHQUFSO0FBQVksbUJBQVMsRUFBQyxpQkFBdEI7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsZ0JBREYsZUFFRTtBQUFLLG1CQUFTLEVBQUM7QUFBZjtBQUFBO0FBQUE7QUFBQTtBQUFBLGdCQUZGLGVBR0U7QUFBSyxtQkFBUyxFQUFDLFNBQWY7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsZ0JBSEY7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLGNBWEw7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBREM7QUFBQTtBQUFBO0FBQUE7QUFBQSxVQURGO0FBcUJEOztHQXByQlFMLEs7VUFDUkkscUQsRUFDQUEscUQsRUFDQUEscUQsRUFDQUEscUQsRUFFQUEscUQsRUFDQUEscUQsRUFDQUEscUQsRUFFWUUsK0M7OztLQVZKTixLO0FBc3JCVCwrREFBZUEsS0FBZiIsImZpbGUiOiIuL3BhZ2VzL2NvbXBvbmVudHMvTWFwL2luZGV4LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdXNlRDMgfSBmcm9tICcuLi8uLi8uLi9ob29rcy91c2VEMydcbmltcG9ydCB1c2VTY3JpcHQgZnJvbSAnLi4vLi4vLi4vaG9va3MvdXNlU2NyaXB0J1xuaW1wb3J0ICogYXMgUyBmcm9tICcuL3N0eWxlZCdcbmltcG9ydCAqIGFzIGQzIGZyb20gJ2QzJ1xuXG5mdW5jdGlvbiBDaGFydCh7IGRhdGEsIHF1ZXJ5LCBiYXNlVXJsIH0pIHtcblx0dXNlU2NyaXB0KCdodHRwczovL2Nkbi5qc2RlbGl2ci5uZXQvbnBtL2xvZGFzaEA0LjE3LjEwL2xvZGFzaC5taW4uanMnKTtcblx0dXNlU2NyaXB0KCdodHRwczovL2NkbmpzLmNsb3VkZmxhcmUuY29tL2FqYXgvbGlicy9qcXVlcnkvMy4zLjEvanF1ZXJ5Lm1pbi5qcycpO1xuXHR1c2VTY3JpcHQoJ2h0dHBzOi8vY2RuanMuY2xvdWRmbGFyZS5jb20vYWpheC9saWJzL2hvd2xlci8yLjAuMTQvaG93bGVyLmNvcmUubWluLmpzJyk7XG5cdHVzZVNjcmlwdCgnaHR0cHM6Ly9jZG5qcy5jbG91ZGZsYXJlLmNvbS9hamF4L2xpYnMvaGFuZGxlYmFycy5qcy80LjAuMTEvaGFuZGxlYmFycy5taW4uanMnKTtcblxuXHR1c2VTY3JpcHQoJy4uL3ZlbmRvcnMvanF1ZXJ5Lm1vdXNld2hlZWwubWluLmpzJyk7XG5cdHVzZVNjcmlwdCgnLi4vdmVuZG9ycy9icm93c2VyLmpzJyk7XG5cdHVzZVNjcmlwdCgnLi4vdmVuZG9ycy9tYWluLmpzJyk7XG5cblx0Y29uc3QgcmVmID0gdXNlRDMoXG4gICAgKHN2ZykgPT4ge1xuXHQgICAgY29uc3Qgd2lkdGggPSAxMjgwIC8vIHdpbmRvdy5pbm5lcldpZHRoLFxuICAgICAgY29uc3QgaGVpZ2h0ID0gOTYwIC8vIHdpbmRvdy5pbm5lckhlaWdodDtcblxuXHRcdFx0Ly8gbGV0IGNhdGVnb3J5ID0gZGF0YS5jYXRlZ29yaWVzXG5cblx0XHRcdC8vIGNhdGVnb3J5LmZpbHRlcih3b3JkID0+IHdvcmQuc2hvdyA9PSBmYWxzZSk7XG5cblx0XHRcdC8vIGNvbnNvbGUubG9nKGNhdGVnb3J5KVxuXG4gICAgICB2YXIgc3ZnID0gZDMuc2VsZWN0KFwiLm1hcGEtdmlzXCIpXG4gICAgICBcdC5hdHRyKFwicHJlc2VydmVBc3BlY3RSYXRpb1wiLCBcInhNaW5ZTWluIG1lZXRcIilcbiAgICAgIFx0LmF0dHIoXCJ2aWV3Qm94XCIsIGAwIDAgJHt3aWR0aH0gJHtoZWlnaHR9YClcbiAgICAgIFxuICAgICAgc3ZnLmFwcGVuZChcInJlY3RcIilcbiAgICAgICAgLmF0dHIoXCJjbGFzc1wiLCBcInZpcy1iYWNrZ3JvdW5kXCIpXG4gICAgICAgIC5hdHRyKFwid2lkdGhcIiwgd2lkdGgpXG4gICAgICAgIC5hdHRyKFwiaGVpZ2h0XCIsIGhlaWdodClcbiAgICAgICAgLm9uKFwiY2xpY2tcIiwgZnVuY3Rpb24oKSB7IGNsb3NlSW5mbygpIH0pXG5cblx0XHRcdGNvbnN0IHZpZXdwb3J0ID0gc3ZnLmFwcGVuZChcImdcIikuYXR0cihcImNsYXNzXCIsIFwidmlld3BvcnRcIilcbiAgICAgIGNvbnN0IHNpbXVsYXRpb24gPSBkMy5mb3JjZVNpbXVsYXRpb24oKS5mb3JjZShcImxpbmtcIiwgZDMuZm9yY2VMaW5rKCkuaWQoZnVuY3Rpb24oZCkgeyByZXR1cm4gZC5pZDsgfSkpXG5cbiAgICAgIC8vIFRvb2x0aXBcbiAgICAgIGNvbnN0IHRvb2x0aXAgPSBkMy5zZWxlY3QoJy50b29sdGlwJylcbiAgICAgIC8vIHZhciBmeCA9IG5ldyBUZXh0U2NyYW1ibGUoZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnRvb2x0aXAtdGV4dCcpLCAxNSlcbiAgICAgIC8vIHZhciBmeHRvID0gbnVsbFxuXG4gICAgICAvLyBVVElMU1xuICAgICAgY29uc3QgY29sb3IgPSBkMy5zY2FsZU9yZGluYWwoZDMuc2NoZW1lQ2F0ZWdvcnkyMClcbiAgICAgIGNvbnN0IHBhbGV0YSA9IFsnI2M5YjJmYScsJyNhZTkyZTknLCcjNzI1Zjk2JywnI2ZmYzI4ZicsJyNhZjc3NDQnLCcjZmZjMjhmJ11cbiAgICAgIFxuICAgICAgLy8gY29uc3QgdGVtcCA9IHtcbiAgICAgIC8vIFx0MCA6IHsgc2l6ZTogMTYsIGNsdXN0ZXI6IHsgeTogMC4zLCBrOiA0LCBzaXplOiAxMDAgfSwgZGVsYXk6IDAsIGNvbG9yOiBwYWxldGFbMF0gfSwgLy8gZG9jXG4gICAgICAvLyBcdDEgOiB7IHNpemU6ICA1LCBjbHVzdGVyOiB7IHk6IDEuMiwgazogMiwgc2l6ZTogIDYwIH0sIGRlbGF5OiAxLCBjb2xvcjogcGFsZXRhWzFdIH0sIC8vIGFwcFxuICAgICAgLy8gXHQyIDogeyBzaXplOiAyMCwgY2x1c3RlcjogeyB5OiAzLjAsIGs6IDQsIHNpemU6IDIwMCB9LCBkZWxheTogMiwgY29sb3I6IHBhbGV0YVsyXSB9LCAvLyBiYXNlXG4gICAgICAvLyBcdDMgOiB7IHNpemU6IDEyLCBjbHVzdGVyOiB7IHk6IDQuMiwgazogMywgc2l6ZTogIDYwIH0sIGRlbGF5OiAzLCBjb2xvcjogcGFsZXRhWzNdIH0sIC8vIHRpXG4gICAgICAvLyBcdDQgOiB7IHNpemU6IDE2LCBjbHVzdGVyOiB7IHk6IDUuNCwgazogMywgc2l6ZTogIDgwIH0sIGRlbGF5OiAzLCBjb2xvcjogcGFsZXRhWzRdIH0sIC8vIG9yZ2FvXG4gICAgICAvLyBcdDUgOiB7IHNpemU6ICA1LCBjbHVzdGVyOiB7IHk6IDcuMCwgazogNCwgc2l6ZTogMTAwIH0sIGRlbGF5OiA1LCBjb2xvcjogcGFsZXRhWzVdIH0sIC8vIHBvbGl0aWNhXG4gICAgICAvLyB9XG5cblx0XHRcdGNvbnN0IHRlbXAgPSB7XG4gICAgICBcdDAgOiB7IGNsdXN0ZXI6IHsgeTogMC4zLCBrOiA0LCB9LCBkZWxheTogMCB9LCAvLyBkb2NcbiAgICAgIFx0MSA6IHsgY2x1c3RlcjogeyB5OiAxLjIsIGs6IDIsIH0sIGRlbGF5OiAxIH0sIC8vIGFwcFxuICAgICAgXHQyIDogeyBjbHVzdGVyOiB7IHk6IDMuMCwgazogNCwgfSwgZGVsYXk6IDIgfSwgLy8gYmFzZVxuICAgICAgXHQzIDogeyBjbHVzdGVyOiB7IHk6IDQuMiwgazogMywgfSwgZGVsYXk6IDMgfSwgLy8gdGlcbiAgICAgIFx0NCA6IHsgY2x1c3RlcjogeyB5OiA1LjQsIGs6IDMsIH0sIGRlbGF5OiAzIH0sIC8vIG9yZ2FvXG4gICAgICBcdDUgOiB7IGNsdXN0ZXI6IHsgeTogNy4wLCBrOiA0LCB9LCBkZWxheTogNSB9LCAvLyBwb2xpdGljYVxuICAgICAgfVxuXG4gICAgICBmdW5jdGlvbiBub2RlX3NpemUoZCl7XG5cdFx0XHRcdC8vIGNvbnNvbGUubG9nKGQpXG4gICAgICBcdC8vIHJldHVybiB0ZW1wW2QudGlwb10uc2l6ZSArIGQud2VpZ2h0XG5cblx0XHRcdFx0cmV0dXJuIGQubWluX3NpemUgKyBkLndlaWdodFxuICAgICAgfVxuICAgICAgXG4gICAgICAvLyBmdW5jdGlvbiBub2RlX2NvbG9yKHQpe1xuICAgICAgLy8gXHRyZXR1cm4gdGVtcFt0XS5jb2xvclxuICAgICAgLy8gfVxuICAgICAgXG4gICAgICAvLyBmdW5jdGlvbiBub2RlX2NsdXN0ZXIodCl7XG4gICAgICAvLyBcdHJldHVybiB0ZW1wW3RdLmNsdXN0ZXIueVxuICAgICAgLy8gfVxuICAgICAgXG4gICAgICBmdW5jdGlvbiBub2RlX2RlbGF5KHQsaSl7XG4gICAgICBcdHJldHVybiB0ZW1wW3RdLmRlbGF5ICogMTAwICsgaSAqIDUwXG4gICAgICB9XG5cbiAgICAgIGNvbnN0IG9yZ2FvX3NjYWxlID0gZDMuc2NhbGVMaW5lYXIoKVxuICAgICAgXHQuZG9tYWluKFsxLCA0XSlcbiAgICAgIFx0LnJhbmdlKFsnI2ZjZDliMicsICcjZTA3MTQ1J10pXG4gICAgICBcdC5pbnRlcnBvbGF0ZShkMy5pbnRlcnBvbGF0ZUhjbClcblxuXHRcdFx0Y29uc3QgbGVnZW5kYXMgPSBkYXRhLmNhdGVnb3JpZXNcblxuXHRcdFx0Ly8gY29uc29sZS5sb2coZGF0YSwgbGVnZW5kYXMpXG5cbiAgICAgIGNvbnN0IGxlZ2VuZGFzX2cgPSB2aWV3cG9ydC5hcHBlbmQoXCJnXCIpXG4gICAgICBcdC5hdHRyKFwiY2xhc3NcIiwgXCJsZWdlbmRhXCIpXG4gICAgICBcdC5zZWxlY3RBbGwoJ2cnKVxuICAgICAgXHQuZGF0YShsZWdlbmRhcylcbiAgICAgIFxuXHRcdFx0Y29uc3QgbGVnZW5kYSA9IGxlZ2VuZGFzX2cuZW50ZXIoKS5hcHBlbmQoJ2cnKVxuICAgICAgXG4gICAgICBsZWdlbmRhXG4gICAgICBcdC5hcHBlbmQoJ2xpbmUnKVxuICAgICAgXHQuYXR0cihcImNsYXNzXCIsICdsZWdlbmRhLWxpbmUnKVxuICAgICAgXHQuYXR0cihcIngxXCIsIDIwIClcbiAgICAgIFx0LmF0dHIoXCJ5MVwiLCBmdW5jdGlvbihkKSB7IHJldHVybiBkLmhlaWdodF9hcmVhIH0pXG4gICAgICBcdC5hdHRyKFwieDJcIiwgd2lkdGggLSAyMClcbiAgICAgIFx0LmF0dHIoXCJ5MlwiLCBmdW5jdGlvbihkKSB7IHJldHVybiBkLmhlaWdodF9hcmVhIH0pO1xuXG4gICAgICBsZWdlbmRhXG4gICAgICBcdC5hcHBlbmQoJ3RleHQnKVxuICAgICAgXHQuYXR0cihcImNsYXNzXCIsICdsZWdlbmRhLXRleHQnKVxuICAgICAgXHQudGV4dChmdW5jdGlvbihkKSB7IHJldHVybiBkLnRpdGxlIH0pXG4gICAgICBcdC5hdHRyKCd4JywgMjApXG4gICAgICBcdC5hdHRyKCd5JywgZnVuY3Rpb24oZCl7IHJldHVybiBkLmhlaWdodF9hcmVhICsgMjUgfSlcbiAgICAgIFx0Lm9uKFwibW91c2VvdmVyXCIsIGxlZ2VuZGFfbW91c2VvdmVyKVxuICAgICAgXHQub24oXCJtb3VzZW91dFwiLCBsZWdlbmRhX21vdXNlb3V0KVxuICAgICAgICBcbiAgICAgIC8vIEdSQVBIXG4gICAgICBjb25zdCBncmFwaCA9IHt9XG4gICAgICBjb25zdCBfbGlua3MgPSB2aWV3cG9ydC5hcHBlbmQoXCJnXCIpLmF0dHIoXCJjbGFzc1wiLCBcImxpbmtzXCIpXG4gICAgICBjb25zdCBfbm9kZXMgPSB2aWV3cG9ydC5hcHBlbmQoXCJnXCIpLmF0dHIoXCJjbGFzc1wiLCBcIm5vZGVzXCIpXG4gICAgICBjb25zdCBfbGFiZWxzID0gdmlld3BvcnQuYXBwZW5kKFwiZ1wiKS5hdHRyKFwiY2xhc3NcIiwgXCJsYWJlbHNcIilcbiAgICAgIFxuICAgICAgY29uc3QgYXJyYXlfbm9kZSA9IFtdXG4gICAgICBjb25zdCBhcnJheV9saW5rID0gW11cbiAgICAgIGNvbnN0IHVybCA9IGAke2Jhc2VVcmx9bWFwcy8ke3F1ZXJ5fS9gXG4gICAgICBcbiAgICAgIGQzLmpzb24odXJsLCBmdW5jdGlvbiAoanNvbikge1xuICAgICAgXHRjb25zdCBjYXRlZ29yeSA9IGpzb24uY2F0ZWdvcmllc1xuICAgICAgXHRjb25zdCBtYXBwaW5nID0ganNvbi5ub2RlX21hcHBpbmdcblxuXHRcdFx0XHQvLyBjb25zb2xlLmxvZygnY2F0ZWdvcnknLCBjYXRlZ29yeSlcblxuXHRcdFx0XHQvLyBpZigpXG4gICAgICBcbiAgICAgIFx0Y2F0ZWdvcnkubWFwKGZ1bmN0aW9uKG5vZGVzLCBpZHgpe1xuICAgICAgXHRcdGNvbnN0IG5vZGUgPSBub2Rlcy5ub2Rlc1xuXG5cdFx0XHRcdC8vIGNvbnNvbGUubG9nKCdub2RlcycsIG5vZGVzKVxuXG5cdFx0XHRcdC8vIGlmKG5vZGVzLnNob3cpe1xuXG4gICAgICBcdFx0bm9kZS5tYXAoZnVuY3Rpb24oaXRlbSwgaW5kZXgpe1xuXG5cdFx0XHRcdFx0XHQvLyBjb25zb2xlLmxvZygndGVtcCcsIGluZGV4LCApXG5cdFx0XHRcdFx0XHRcbiAgICAgIFx0XHRcdGFycmF5X25vZGUucHVzaCh7XG5cdFx0XHRcdFx0XHRcdHNob3c6IG5vZGVzLnNob3csXG4gICAgICBcdFx0XHRcdGlkOiBpdGVtLmlkLFxuICAgICAgXHRcdFx0XHRub21lOiBpdGVtLmxhYmVsLFxuICAgICAgXHRcdFx0XHRub21lY29tcGxldG86IGl0ZW0udGl0bGUsXG5cdFx0XHRcdFx0XHRcdGNvbG9yOiBub2Rlcy5ub2RlX2NvbG9yID8gbm9kZXMubm9kZV9jb2xvciA6IGlkeCA8IDYgPyBwYWxldGFbaWR4XSA6ICcjYzliMmZhJyxcbiAgICAgIFx0XHRcdFx0dGlwbzogbm9kZXMub3JkZXIgPyBub2Rlcy5vcmRlciA6IGlkeCxcbiAgICAgIFx0XHRcdFx0dGlwb19sYWJlbDogbm9kZXMudGl0bGUsXG4gICAgICBcdFx0XHRcdGRlY3JpcHRpb246IGl0ZW0udGV4dCA/IGl0ZW0udGV4dCA6ICcnLFxuXHRcdFx0XHRcdFx0XHRidXR0b25faWNvbjogaXRlbS5idXR0b25faWNvbiA/IGl0ZW0uYnV0dG9uX2ljb24udXJsIDogbnVsbCxcblx0XHRcdFx0XHRcdFx0YnV0dG9uX2xpbms6IGl0ZW0uYnV0dG9uX2xpbmsgPyBpdGVtLmJ1dHRvbl9saW5rIDogbnVsbCxcblx0XHRcdFx0XHRcdFx0YnV0dG9uX3RleHQ6IGl0ZW0uYnV0dG9uX3RleHQgPyBpdGVtLmJ1dHRvbl90ZXh0IDogbnVsbCxcbiAgICAgIFx0XHRcdFx0eDogaXRlbS54X3Bvc2l0aW9uID8gaXRlbS54X3Bvc2l0aW9uICsgMTYwIDogMTYwLFxuICAgICAgXHRcdFx0XHR5OiBpdGVtLnlfcG9zaXRpb24gPyBpdGVtLnlfcG9zaXRpb24gKyBub2Rlcy5oZWlnaHRfYXJlYSA6IG5vZGVzLmhlaWdodF9hcmVhICsgMjAsXG5cdFx0XHRcdFx0XHRcdG1pbl9zaXplOiBub2Rlcy5taW5fc2l6ZSA/IG5vZGVzLm1pbl9zaXplIDogNSxcblx0XHRcdFx0XHRcdFx0bWF4X3NpemU6IG5vZGVzLm1heF9zaXplID8gbm9kZXMubWF4X3NpemUgOiA1MFxuICAgICAgXHRcdFx0fSlcbiAgICAgIFx0XHR9KVxuXG5cdFx0XHRcdCAgLy99XG5cbiAgICAgIFx0fSlcblxuXHRcdFx0Ly8gfVxuICAgICAgXG5cdCAgICAgIGNvbnN0IF9ub2RlcyA9IGFycmF5X25vZGVcblx0ICAgICAgY29uc3QgX25vZGVzb3JpID0gW11cblx0ICAgICAgYXJyYXlfbm9kZS5tYXAoZnVuY3Rpb24obyl7XG5cdCAgICAgIFx0X25vZGVzb3JpLnB1c2gobylcblx0ICAgICAgfSlcblxuXHRcdFx0XHQvLyBjb25zb2xlLmxvZyhhcnJheV9ub2RlKVxuXG5cdCAgICBcdG1hcHBpbmcubWFwKGZ1bmN0aW9uKGxpbmtzKXtcblx0ICAgIFx0XHRjb25zdCByZXN1bHQgPSBhcnJheV9ub2RlLmZpbHRlcih3b3JkID0+IHdvcmQuaWQgPT0gbGlua3Muc291cmNlLmlkKTtcblx0XHRcdFx0XHQvLyBjb25zb2xlLmxvZyhsaW5rcylcblx0ICAgIFx0XHRhcnJheV9saW5rLnB1c2goe1xuXHQgICAgXHRcdFx0YmFzZTogbGlua3Muc291cmNlLmlkLFxuXHQgICAgXHRcdFx0Ly8gcmVsYXRpb246IHJlc3VsdFswXSA/IHJlc3VsdFswXS50aXBvIDogMCxcblx0XHRcdFx0XHRcdHJlbGF0aW9uOiByZXN1bHRbMF0udGlwbyxcblx0ICAgIFx0XHRcdHNvdXJjZTogbGlua3Muc291cmNlLmlkLFxuXHQgICAgXHRcdFx0dGFyZ2V0OiBsaW5rcy50YXJnZXQuaWQsXG5cdFx0XHRcdFx0XHRjb250ZXh0OiBsaW5rcy5jb250ZXh0XG5cdCAgICBcdFx0fSlcblx0ICAgIFx0fSlcblx0XHRcdFxuXHQgICAgXHRjb25zdCBfcmVsYXRpb25zID0gYXJyYXlfbGlua1xuXHQgICAgXHRjb25zdCBfbGlua3MgPSBbXVxuXHQgICAgXHRjb25zdCBfbGlua3NvcmkgPSBbXVxuXHRcdFx0XG5cdCAgICBcdF9yZWxhdGlvbnMubWFwKGZ1bmN0aW9uKGQpe1xuXHQgICAgXHRcdF9saW5rcy5wdXNoKHtiYXNlOiBkLmJhc2UsIHNvdXJjZTogZC5zb3VyY2UsIHJlbGF0aW9uOiBkLnJlbGF0aW9uLCB0YXJnZXQ6IGQudGFyZ2V0LCBjb250ZXh0OiBkLmNvbnRleHR9KVx0XG5cdCAgICBcdFx0X2xpbmtzb3JpLnB1c2goe2Jhc2U6IGQuYmFzZSwgc291cmNlOiBkLnNvdXJjZSwgcmVsYXRpb246IGQucmVsYXRpb24sIHRhcmdldDogZC50YXJnZXQsIGNvbnRleHQ6IGQuY29udGV4dH0pXHRcblx0ICAgIFx0fSlcblxuXHRcdFx0XHRjb25zdCBrID0ge1xuXHRcdFx0XHRcdDA6IDAsIC8vIGRvY1xuXHRcdFx0XHRcdDE6IDAsIC8vIGFwcFxuXHRcdFx0XHRcdDI6IDAsIC8vIGJhc2Vcblx0XHRcdFx0XHQzOiAwLCAvLyB0aVxuXHRcdFx0XHRcdDQ6IDAsIC8vIG9yZ2FvXG5cdFx0XHRcdFx0NTogMCwgLy8gcG9saXRpY2Fcblx0XHRcdFx0fVxuXHRcdFx0XG5cdFx0XHRcdF9ub2Rlcy5tYXAoZnVuY3Rpb24oZCl7XG5cblx0XHRcdFx0XHQvLyBjb25zb2xlLmxvZyhkKVxuXG5cblx0XHRcdFx0XHQvLyBjb25zdCBsb29wID0gdGVtcFtkLnRpcG9dLmNsdXN0ZXIuc2l6ZVxuXG5cdFx0XHRcdFx0Y29uc3QgbG9vcCA9IGQubWF4X3NpemVcblxuXHRcdFx0XHRcdFxuXG5cblx0XHRcdFx0XHRjb25zdCBzdGVwID0gbG9vcCAvIHRlbXBbZC50aXBvXS5jbHVzdGVyLmtcblx0XHRcdFx0XG5cdFx0XHRcdFx0ZC5vZmZzZXRZID0ga1tkLnRpcG9dXG5cdFx0XHRcdFx0a1tkLnRpcG9dICs9IHN0ZXBcblx0XHRcdFx0XHRrW2QudGlwb10gPSBrW2QudGlwb10gJSBsb29wXG5cdFx0XHRcdFxuXHRcdFx0XHRcdGQueCA9IE51bWJlcihkLngpXG5cdFx0XHRcdFx0ZC55ID0gTnVtYmVyKGQueSlcblx0XHRcdFx0XG5cdFx0XHRcdFx0Y29uc3QgYXJyID0gXy5maWx0ZXIoX2xpbmtzb3JpLCBmdW5jdGlvbihvKSB7IHJldHVybiBvLnRhcmdldCAgPT0gZC5pZCB8fCBvLnNvdXJjZSAgPT0gZC5pZCB9KVxuXHRcdFx0XHRcblx0XHRcdFx0XHQvLyBkLmNvbG9yID0gbm9kZV9jb2xvcihkLnRpcG8pXG5cblx0XHRcdFx0XHRcblxuXHRcdFx0XHRcdGQucmVsX2lkcyA9IF8udW5pcShfLm1hcChhcnIsICdiYXNlJykpXG5cdFx0XHRcdFx0ZC5jb250ZXh0ID0gXy51bmlxKF8ubWFwKGFyciwgJ2NvbnRleHQnKSlcblxuXHRcdFx0XHRcdC8vIGNvbnNvbGUubG9nKGFycilcblx0XHRcdFx0XG5cdFx0XHRcdFx0aWYoZC50aXBvID09IDMpe1xuXHRcdFx0XHRcdFx0Y29uc3QgYXJyMiA9IF8uZmlsdGVyKGFyciwgZnVuY3Rpb24obykgeyByZXR1cm4gby5yZWxhdGlvbiA9PSA0IH0pXG5cdFx0XHRcdFx0XHRkLndlaWdodCA9IGFycjIubGVuZ3RoICogNFxuXHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHRkLndlaWdodCA9IGFyci5sZW5ndGhcblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHQvLyBjb25zb2xlLmxvZyhkKVxuXHRcdFx0XHR9KVxuXHRcdFx0XG5cdFx0XHRcdC8vIE1VTFRJUExFIExJTktTOiBTVEFSVFxuXHRcdFx0XHRfLmVhY2goX2xpbmtzLCBmdW5jdGlvbihsaW5rKSB7XG5cdFx0XHRcdFx0Y29uc3Qgc2FtZSA9IF8uZmlsdGVyKF9saW5rcywge1xuXHRcdFx0XHRcdFx0J3NvdXJjZSc6IGxpbmsuc291cmNlLFxuXHRcdFx0XHRcdFx0J3RhcmdldCc6IGxpbmsudGFyZ2V0XG5cdFx0XHRcdFx0fSlcblx0XHRcdFx0XHRfLmVhY2goc2FtZSwgZnVuY3Rpb24ocywgaSkge1xuXHRcdFx0XHRcdFx0aWYoIXMubGlua051bSl7XG5cdFx0XHRcdFx0XHRcdHMubGlua051bSA9IChpICsgMSlcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9KVxuXHRcdFx0XHR9KVxuXHRcdFx0XHQvLyBNVUxUSVBMRSBMSU5LUzogRU5EXG5cblx0XHRcdFx0Z3JhcGgubm9kZXMgPSBfbm9kZXNcblx0XHRcdFx0Z3JhcGgubGlua3MgPSBfbGlua3Ncblx0XHRcdFx0Z3JhcGguZGF0YSA9IHt9XG5cdFx0XHRcdGdyYXBoLmRhdGEubm9kZXMgPSBfbm9kZXNvcmlcblx0XHRcdFx0Z3JhcGguZGF0YS5saW5rcyA9IF9saW5rc29yaVxuXG5cdFx0XHRcdC8vIGNvbnNvbGUubG9nKF9saW5rcylcblxuXHRcdFx0XHQvLyBpZihkYXRhX24uc2hvdyl7XG5cdFx0XHRcdHVwZGF0ZShncmFwaC5ub2RlcywgZ3JhcGgubGlua3MpXG5cdFx0XHRcdC8vIH1cblx0XHRcdH0pO1xuXG5cdFx0XHRmdW5jdGlvbiB1cGRhdGUoZGF0YV9uLGRhdGFfbCl7XG5cdFx0XHRcdGNvbnN0IHQgPSBkMy50cmFuc2l0aW9uKCkuZHVyYXRpb24oNzUwKTtcblx0XHRcdFx0Y29uc3Qgbm9kZXMgID0gX25vZGVzLnNlbGVjdEFsbCgnLm5vZGUnKS5kYXRhKGRhdGFfbiwgZnVuY3Rpb24oZCkgeyByZXR1cm4gZC5pZCB9KVxuXHRcdFx0XHRjb25zdCBsYWJlbHMgPSBfbGFiZWxzLnNlbGVjdEFsbCgnLmxhYmVsJykuZGF0YShkYXRhX24sIGZ1bmN0aW9uKGQpIHsgcmV0dXJuIGQuaWQgfSlcblx0XHRcdFx0Y29uc3QgbGlua3MgID0gX2xpbmtzLnNlbGVjdEFsbCgnLmxpbmsnKS5kYXRhKGRhdGFfbCwgZnVuY3Rpb24oZCkgeyByZXR1cm4gZC5zb3VyY2UgKyAnXycgKyBkLnRhcmdldCB9KVxuXG5cdFx0XHRcdC8vIGNvbnNvbGUubG9nKGRhdGFfbilcblxuXHRcdFx0XHRcblx0XHRcdFxuXHRcdFx0XHQvLyBOT0RFU1xuXHRcdFx0XHRub2Rlc1xuXHRcdFx0XHRcdC5leGl0KClcblx0XHRcdFx0XHQudHJhbnNpdGlvbih0KVxuXHRcdFx0XHRcdC5hdHRyKFwiclwiLCAxZS02KVxuXHRcdFx0XHRcdC5yZW1vdmUoKVxuXHRcdFx0XG5cdFx0XHRcdG5vZGVzLmVudGVyKClcblx0XHRcdFx0XHQuYXBwZW5kKFwiZ1wiKVxuXHRcdFx0XHRcdC5hdHRyKFwiY2xhc3NcIiwgZnVuY3Rpb24oZCkge1xuXHRcdFx0XHRcdFx0Y29uc3QgaXRlbU5hbWUgPSBkLmNvbnRleHQgPyBkLmNvbnRleHQgOiBkLnJlbF9pZHNcblx0XHRcdFx0XHRcdC8vIHJldHVybiBcIm5vZGUgbm9kZS1cIiArIGQuaWQgKyBcIiBcIiArIGQucmVsX2lkcy5qb2luKFwiIFwiKSArIFwiIFwiICsgXCJub2RlLVwiICsgZC5jb250ZXh0LmpvaW4oXCIgbm9kZS1cIilcblx0XHRcdFx0XHRcdHJldHVybiBcIm5vZGUgbm9kZS1cIiArIGQuaWQgKyBcIiBcIiArIGQucmVsX2lkcy5qb2luKFwiIFwiKSArIFwiIFwiICsgXCJub2RlLVwiICsgaXRlbU5hbWUuam9pbihcIiBub2RlLVwiKVxuXHRcdFx0XHRcdH0pXG5cdFx0XHRcdFx0LmF0dHIoJ25vZGVfaWQnLCBmdW5jdGlvbihkKSB7XG5cdFx0XHRcdFx0XHRyZXR1cm4gZC5pZDtcblx0XHRcdFx0XHR9KVxuXHRcdFx0XHRcdC5hcHBlbmQoXCJjaXJjbGVcIilcblx0XHRcdFx0XHQuYXR0cihcInJcIiwgMClcblx0XHRcdFx0XHQub24oXCJtb3VzZW92ZXJcIiwgbm9kZV9tb3VzZW92ZXIpXG5cdFx0XHRcdFx0Lm9uKFwibW91c2VvdXRcIiwgbm9kZV9tb3VzZW91dClcblx0XHRcdFx0XHQub24oXCJjbGlja1wiLCBub2RlX2NsaWNrKVxuXHRcdFx0XHRcdC50cmFuc2l0aW9uKHQpXG5cdFx0XHRcdFx0LmRlbGF5KGZ1bmN0aW9uKGQsIGkpIHsgcmV0dXJuIG5vZGVfZGVsYXkoZC50aXBvLGkpIH0pXG5cdFx0XHRcdFx0LmF0dHIoXCJyXCIsIGZ1bmN0aW9uKGQpeyByZXR1cm4gbm9kZV9zaXplKGQpIH0gKVxuXHRcdFx0XHRcdC5hdHRyKFwiZmlsbFwiLCBmdW5jdGlvbihkKSB7IHJldHVybiBkLmNvbG9yIH0pXG5cblx0XHRcdFx0Ly8gTEFCRUxTXG5cdFx0XHRcdGxhYmVscy5lbnRlcigpXG5cdFx0XHRcdFx0LmFwcGVuZChcImdcIilcblx0XHRcdFx0XHQuYXR0cihcImNsYXNzXCIsIGZ1bmN0aW9uKGQpIHtcblx0XHRcdFx0XHRcdGNvbnN0IGl0ZW1OYW1lID0gZC5jb250ZXh0ID8gZC5jb250ZXh0IDogZC5yZWxfaWRzXG5cdFx0XHRcdFx0XHQvLyByZXR1cm4gXCJsYWJlbCBub2RlLVwiICsgZC50aXBvICsgXCIgbGFiZWwtXCIgKyBkLmlkICsgXCIgXCIgKyBkLnJlbF9pZHMuam9pbihcIiBcIikgKyBcIiBcIiArIFwibGFiZWwtXCIgKyBkLmNvbnRleHQuam9pbihcIiBsYWJlbC1cIilcblx0XHRcdFx0XHRcdHJldHVybiBcImxhYmVsIG5vZGUtXCIgKyBkLnRpcG8gKyBcIiBsYWJlbC1cIiArIGQuaWQgKyBcIiBcIiArIGQucmVsX2lkcy5qb2luKFwiIFwiKSArIFwiIFwiICsgXCJsYWJlbC1cIiArIGl0ZW1OYW1lLmpvaW4oXCIgbGFiZWwtXCIpXG5cdFx0XHRcdFx0fSlcblx0XHRcdFx0XHQuYXR0cignbGFiZWxfaWQnLCBmdW5jdGlvbihkKSB7XG5cdFx0XHRcdFx0XHRyZXR1cm4gZC5pZDtcblx0XHRcdFx0XHR9KVxuXHRcdFx0XHRcdC5hdHRyKCdsYWJlbF9ub21lJywgZnVuY3Rpb24oZCkge1xuXHRcdFx0XHRcdFx0cmV0dXJuIGQubm9tZVxuXHRcdFx0XHRcdH0pXG5cdFx0XHRcdFx0LmFwcGVuZChcInRleHRcIilcblx0XHRcdFx0XHRcdC50ZXh0KGZ1bmN0aW9uKGQpIHsgXG5cdFx0XHRcdFx0XHRcdGNvbnN0IHNpemUgPSBub2RlX3NpemUoZClcblx0XHRcdFx0XHRcdFx0cmV0dXJuIHNpemUgPD0gMTAgPyAnJyA6IGQubm9tZVxuXHRcdFx0XHRcdFx0fSlcblx0XHRcdFx0XHRcdC5hdHRyKFwidGV4dC1hbmNob3JcIiwgXCJtaWRkbGVcIilcblx0XHRcdFx0XHRcdC5hdHRyKCd4JywgMClcblx0XHRcdFx0XHRcdC5hdHRyKCd5JywgZnVuY3Rpb24oZCl7IHJldHVybiBub2RlX3NpemUoZCkgKyAxNiB9KVxuXHRcdFx0XHRcdFx0LmF0dHIoXCJvcGFjaXR5XCIsIDApXG5cdFx0XHRcdFx0XHQudHJhbnNpdGlvbih0KVxuXHRcdFx0XHRcdFx0LmRlbGF5KGZ1bmN0aW9uKGQsIGkpIHsgcmV0dXJuIG5vZGVfZGVsYXkoZC50aXBvLCBpICsgMTApIH0pXG5cdFx0XHRcdFx0XHQuYXR0cihcIm9wYWNpdHlcIiwgMSlcblx0XHRcdFx0XG5cdFx0XHRcdGxhYmVscy5leGl0KCkucmVtb3ZlKClcblx0XHRcdFx0XG5cdFx0XHRcdC8vIExJTktTXG5cdFx0XHRcdGxpbmtzLmV4aXQoKS5yZW1vdmUoKVxuXHRcdFx0XHRsaW5rcy5lbnRlcigpXG5cdFx0XHRcdFx0LmFwcGVuZChcInBhdGhcIilcblx0XHRcdFx0XHQuYXR0cihcImNsYXNzXCIsIFwibGlua1wiKVxuXHRcdFx0XHRcdC5hdHRyKFwiY2xhc3NcIiwgZnVuY3Rpb24oZCkge1xuXHRcdFx0XHRcdFx0Y29uc3QgaXRlbU5hbWUgPSBkLmNvbnRleHQgPyBkLmNvbnRleHQgOiBkLnJlbF9pZHNcblx0XHRcdFx0XHRcdC8vIHJldHVybiBkMy5zZWxlY3QodGhpcykuYXR0cihcImNsYXNzXCIpICsgJyBsaW5rLScgKyBkLmJhc2UgICsgXCIgXCIgKyBcImxpbmstXCIgKyBkLmNvbnRleHRcblx0XHRcdFx0XHRcdHJldHVybiBkMy5zZWxlY3QodGhpcykuYXR0cihcImNsYXNzXCIpICsgJyBsaW5rLScgKyBkLmJhc2UgICsgXCIgXCIgKyBcImxpbmstXCIgKyBpdGVtTmFtZVxuXHRcdFx0XHRcdH0pXG5cdFx0XHRcdFx0LmF0dHIoXCJvcGFjaXR5XCIsIDApXG5cdFx0XHRcdFx0LnRyYW5zaXRpb24odClcblx0XHRcdFx0XHQuZGVsYXkoNDAwMClcblx0XHRcdFx0XHQuYXR0cihcIm9wYWNpdHlcIiwgMSlcblx0XHRcdFx0XG5cdFx0XHRcdHNpbXVsYXRpb25cblx0XHRcdFx0XHQubm9kZXMoZGF0YV9uKVxuXHRcdFx0XHRcdC5mb3JjZShcImxpbmtcIilcblx0XHRcdFx0XHQubGlua3MoZGF0YV9sKVxuXHRcdFx0XHRcblx0XHRcdFx0dGlja2VkKClcblx0XHRcdH1cblxuXHRcdFx0ZnVuY3Rpb24gdGlja2VkKCkge1xuXHRcdFx0XHRzaW11bGF0aW9uLmFscGhhKDApXG5cdFx0XHRcblx0XHRcdFx0Y29uc3Qgbm9kZXMgID0gX25vZGVzLnNlbGVjdEFsbCgnLm5vZGUnKVxuXHRcdFx0XHRjb25zdCBsaW5rcyAgPSBfbGlua3Muc2VsZWN0QWxsKCcubGluaycpXG5cdFx0XHRcdGNvbnN0IGxhYmVscyA9IF9sYWJlbHMuc2VsZWN0QWxsKCcubGFiZWwnKVxuXHRcdFx0XG5cdFx0XHRcdGlmKG5vZGVzKXtcblx0XHRcdFx0XHRub2Rlcy5hdHRyKFwidHJhbnNmb3JtXCIsIGZ1bmN0aW9uKGQpIHtcblx0XHRcdFx0XHRcdHJldHVybiBcInRyYW5zbGF0ZShcIiArIGQueCArIFwiLFwiICsgZC55ICsgXCIpXCI7XG5cdFx0XHRcdFx0fSlcblx0XHRcdFx0fVxuXHRcdFx0XG5cdFx0XHRcdGlmKGxpbmtzKXtcblx0XHRcdFx0XHRsaW5rcy5hdHRyKFwiZFwiLCBwb3NpdGlvbkxpbmspXG5cdFx0XHRcdH1cblx0XHRcdFxuXHRcdFx0XHRpZihsYWJlbHMpe1xuXHRcdFx0XHRcdGxhYmVscy5hdHRyKFwidHJhbnNmb3JtXCIsIGZ1bmN0aW9uKGQpIHtcblx0XHRcdFx0XHRcdHJldHVybiBcInRyYW5zbGF0ZShcIiArIGQueCArIFwiLFwiICsgZC55ICsgXCIpXCI7XG5cdFx0XHRcdFx0fSlcblx0XHRcdFx0fVxuXHRcdFx0fVxuXG5cdFx0XHRmdW5jdGlvbiBwb3NpdGlvbkxpbmsoZCkge1xuXHRcdFx0XHRjb25zdCBvZmZzZXQgPSAzMCAqIGQubGlua051bTtcblx0XHRcdFxuXHRcdFx0XHRjb25zdCBtaWRwb2ludF94ID0gKGQuc291cmNlLnggKyBkLnRhcmdldC54KSAvIDI7XG5cdFx0XHRcdGNvbnN0IG1pZHBvaW50X3kgPSAoZC5zb3VyY2UueSArIGQudGFyZ2V0LnkpIC8gMjtcblx0XHRcdFxuXHRcdFx0XHRjb25zdCBkeCA9IChkLnRhcmdldC54IC0gZC5zb3VyY2UueCk7XG5cdFx0XHRcdGNvbnN0IGR5ID0gKGQudGFyZ2V0LnkgLSBkLnNvdXJjZS55KTtcblx0XHRcdFxuXHRcdFx0XHRjb25zdCBub3JtYWxpc2UgPSBNYXRoLnNxcnQoKGR4ICogZHgpICsgKGR5ICogZHkpKTtcblx0XHRcdFxuXHRcdFx0XHRjb25zdCBvZmZTZXRYID0gbWlkcG9pbnRfeCArIG9mZnNldCAqIChkeS9ub3JtYWxpc2UpO1xuXHRcdFx0XHRjb25zdCBvZmZTZXRZID0gbWlkcG9pbnRfeSAtIG9mZnNldCAqIChkeC9ub3JtYWxpc2UpO1xuXHRcdFx0XG5cdFx0XHRcdHJldHVybiAgXCJNXCIgKyBkLnNvdXJjZS54ICsgXCIsXCIgKyBkLnNvdXJjZS55ICsgXCJTXCIgKyBvZmZTZXRYICsgXCIsXCIgKyBvZmZTZXRZICsgXCIgXCIgKyBkLnRhcmdldC54ICsgXCIsXCIgKyBkLnRhcmdldC55O1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBEUkFHXG5cdFx0XHRjb25zdCBkcmFnX2hhbmRsZXIgPSBkMy5kcmFnKCkub24oXCJzdGFydFwiLCBkcmFnX3N0YXJ0KS5vbihcImRyYWdcIiwgZHJhZ19kcmFnKS5vbihcImVuZFwiLCBkcmFnX2VuZClcblxuXHRcdFx0ZnVuY3Rpb24gZHJhZ19zdGFydChkKSB7XG5cdFx0XHRcdGlmICghZDMuZXZlbnQuYWN0aXZlKSBzaW11bGF0aW9uLmFscGhhVGFyZ2V0KDAuMSkucmVzdGFydCgpO1xuXHRcdFx0XHRkLmZ4ID0gZC54O1xuXHRcdFx0XHRkLmZ5ID0gZC55O1xuXHRcdFx0fVxuXG5cdFx0XHRmdW5jdGlvbiBkcmFnX2RyYWcoZCkge1xuXHRcdFx0XHRkLmZ4ID0gZDMuZXZlbnQueDtcblx0XHRcdFx0ZC5meSA9IGQzLmV2ZW50Lnk7XG5cdFx0XHR9XG5cblx0XHRcdGZ1bmN0aW9uIGRyYWdfZW5kKGQpIHtcblx0XHRcdFx0aWYgKCFkMy5ldmVudC5hY3RpdmUpIHNpbXVsYXRpb24uYWxwaGFUYXJnZXQoMC4wMSk7XG5cdFx0XHR9XG5cblx0XHRcdGZ1bmN0aW9uIGRibGNsaWNrKGQpIHtcblx0XHRcdFx0ZC5meCA9IG51bGw7XG5cdFx0XHRcdGQuZnkgPSBudWxsO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBaT09NXG5cdFx0XHRjb25zdCB6b29tX2hhbmRsZXIgPSBkMy56b29tKCkub24oXCJ6b29tXCIsIHpvb21fYWN0aW9ucylcblx0XHRcdGZ1bmN0aW9uIHpvb21fYWN0aW9ucygpe1xuXHRcdFx0XHR2aWV3cG9ydC5hdHRyKFwidHJhbnNmb3JtXCIsIGQzLmV2ZW50LnRyYW5zZm9ybSlcblx0XHRcdH1cblxuXHRcdFx0Ly8gUkVTSVpFXG5cdFx0XHRmdW5jdGlvbiByZXNpemUoKSB7XG5cdFx0XHRcdHdpZHRoID0gd2luZG93LmlubmVyV2lkdGhcblx0XHRcdFx0aGVpZ2h0ID0gd2luZG93LmlubmVySGVpZ2h0XG5cdFx0XHRcdHN2Zy5hdHRyKFwid2lkdGhcIiwgd2lkdGgpLmF0dHIoXCJoZWlnaHRcIiwgaGVpZ2h0KTtcblx0XHRcdH1cblxuICAgICAgLy8gRVZFTlRTXG4gICAgICBmdW5jdGlvbiBsZWdlbmRhX21vdXNlb3ZlcihkKSB7XG4gICAgICBcdGlmKCQod2luZG93KS53aWR0aCgpIDwgNzY4KSByZXR1cm5cbiAgICAgIFxuICAgICAgXHRjb25zdCBzdmdfdyA9IGQzLnNlbGVjdCgnLm1hcGEtdmlld3BvcnQnKS5ub2RlKCkuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkud2lkdGhcbiAgICAgIFx0Y29uc3Qgc2NhbGUgPSBzdmdfdyAvIHdpZHRoXG4gICAgICBcdGNvbnN0IHRvcCA9IDAgKyAoZC5oZWlnaHRfYXJlYSArIDUwKSAqIHNjYWxlIC8vIDE2MFxuICAgICAgXHRjb25zdCBsZWZ0ID0gMTgwXG4gICAgICBcbiAgICAgIFx0ZDMuc2VsZWN0QWxsKCcudG9vbHRpcC10aXRsZScpXG4gICAgICBcdFx0LnRleHQoZC50aXRsZSlcblx0XHRcdFx0XHQvLyAuc3R5bGUoJ2NvbG9yJywgZC5ub2RlX2NvbG9yIClcbiAgICAgIFx0XHQuc3R5bGUoJ2NvbG9yJywgZC5jb2xvciApXG5cblx0XHRcdFx0ZDMuc2VsZWN0QWxsKCcudG9vbHRpcC10ZXh0JylcbiAgICAgIFx0XHQudGV4dChkLmRlc2NyaXB0aW9uKVxuICAgICAgXG4gICAgICBcdHRvb2x0aXBcbiAgICAgIFx0XHQuY2xhc3NlZCgnc2hvdycsIHRydWUpXG4gICAgICBcdFx0LnN0eWxlKCd0b3AnLCB0b3AgKyAncHgnKVxuICAgICAgXHRcdC50cmFuc2l0aW9uKClcbiAgICAgIFx0XHQuZHVyYXRpb24oMTAwKVxuICAgICAgXHRcdC5zdHlsZSgnbGVmdCcsIGxlZnQgKyAncHgnKVxuICAgICAgXG4gICAgICBcdC8vIGZ4LnNldFRleHQoZC5kZXNjcmlwdGlvbilcbiAgICAgIFx0c291bmRfb3Zlci5wbGF5KClcbiAgICAgIH1cblxuICAgICAgZnVuY3Rpb24gbGVnZW5kYV9tb3VzZW91dChkKSB7XG4gICAgICBcdGlmKCQod2luZG93KS53aWR0aCgpIDwgNzY4KSByZXR1cm5cbiAgICAgIFx0dG9vbHRpcC5jbGFzc2VkKCdzaG93JywgZmFsc2UpXG4gICAgICB9XG5cblx0XHRcdGZ1bmN0aW9uIG5vZGVfbW91c2VvdmVyKGQsIGlkeCkge1xuXHRcdFx0XHRpZigkKHdpbmRvdykud2lkdGgoKSA8IDc2OCkgcmV0dXJuXG5cdFx0XHRcblx0XHRcdFx0Ly8gbGFiZWxcblx0XHRcdFx0Y29uc3QgdGV4dCA9IGQzLnNlbGVjdCgnLmxhYmVsW2xhYmVsX2lkPVwiJyArIGQuaWQgKyAnXCJdJylcblx0XHRcdFx0aWYoXy5pbmRleE9mKFswLCAxLCAyLCAzLCA0LCA1XSwgZC50aXBvKSAhPSAtMSl7IC8vICdiYXNlJywnZG9jJywnb3JnYW8nLCd0aSdcblx0XHRcdFx0XHR0ZXh0LmNsYXNzZWQoJ2hpZGRlbicsdHJ1ZSlcblx0XHRcdFx0fVxuXHRcdFx0XG5cdFx0XHRcdC8vIGxpbmtzXG5cdFx0XHRcdGQzLnNlbGVjdEFsbCgnLm1hcGEnKS5jbGFzc2VkKCdoaWdobGlnaHQnLCB0cnVlKVxuXG5cdFx0XHRcdGNvbnN0IGl0ZW1OYW1lID0gZC5jb250ZXh0W2lkeF0gIT0gdW5kZWZpbmVkID8gZC5jb250ZXh0IDogZC5yZWxfaWRzXG5cblx0XHRcdFx0Ly8gY29uc3Qgb2kgPSBkLmNvbnRleHQgPyAndGVtJyA6ICduYW8gdGVtJ1xuXG5cdFx0XHRcdC8vIGNvbnNvbGUubG9nKGl0ZW1OYW1lLCBvaSwgIGQsIGQuY29udGV4dCwgZC5jb250ZXh0W2lkeF0pXG5cblx0XHRcdFx0Ly8gXy5mb3JFYWNoKGQucmVsX2lkcywgZnVuY3Rpb24oaWQpe1xuXHRcdFx0XHRfLmZvckVhY2goaXRlbU5hbWUsIGZ1bmN0aW9uKGlkKSB7XG5cdFx0XHRcdFx0ZDMuc2VsZWN0QWxsKCcubGluay5saW5rLScgKyBpZCkuY2xhc3NlZCgnaGlnaGxpZ2h0Jyx0cnVlKVxuXHRcdFx0XHRcdGQzLnNlbGVjdEFsbCgnLm5vZGUubm9kZS0nICsgaWQpLmNsYXNzZWQoJ2hpZ2hsaWdodCcsdHJ1ZSlcblx0XHRcdFx0fSlcblx0XHRcdFxuXHRcdFx0XHQvLyB0b29sdGlwXG5cdFx0XHRcdGNvbnN0IHN2Z193ID0gZDMuc2VsZWN0KCcubWFwYS12aWV3cG9ydCcpLm5vZGUoKS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS53aWR0aFxuXHRcdFx0XHRjb25zdCBzY2FsZSA9IHN2Z193IC8gd2lkdGhcblxuXHRcdFx0XHRjb25zdCB0b3AgPSBkLnkgPCBoZWlnaHQgKiAuOFxuXHRcdFx0XHRcdD8gZC55ICogc2NhbGUgKyAobm9kZV9zaXplKGQpICogMC41ICsgMzApICogc2NhbGUgKyAwIC8vIDE2MFxuXHRcdFx0XHRcdDogZC55ICogc2NhbGUgLSAobm9kZV9zaXplKGQpICogc2NhbGUgKyA5MCkgKyAwIC8vIDE2MFxuXHRcdFx0XG5cdFx0XHRcdGxldCBsZWZ0ID0gZC54IDwgd2lkdGggKiAuNzVcblx0XHRcdFx0XHQ/IChkLnggKyAyMCkgKiBzY2FsZVxuXHRcdFx0XHRcdDogKGQueCAtIDIwKSAqIHNjYWxlXG5cdFx0XHRcblx0XHRcdFx0Ly8gd2luZG93IHNhZmUgYXJlYVxuXHRcdFx0XHRsZWZ0ID0gTWF0aC5taW4oTWF0aC5tYXgoMTgwLGxlZnQpLHdpZHRoICogc2NhbGUgLSAxODApXG5cdFx0XHRcblx0XHRcdFx0ZDMuc2VsZWN0QWxsKCcudG9vbHRpcC10aXRsZScpXG5cdFx0XHRcdFx0LnRleHQoZC50aXBvX2xhYmVsKVxuXHRcdFx0XHRcdC5zdHlsZSgnY29sb3InLCBmdW5jdGlvbigpeyByZXR1cm4gZC5jb2xvciB9KVxuXG5cdFx0XHRcdGQzLnNlbGVjdEFsbCgnLnRvb2x0aXAtdGV4dCcpXG4gICAgICBcdFx0LnRleHQoZC5ub21lY29tcGxldG8gfHwgZC5ub21lKVxuXHRcdFx0XG5cdFx0XHRcdHRvb2x0aXBcblx0XHRcdFx0XHQuY2xhc3NlZCgnc2hvdycsIHRydWUpXG5cdFx0XHRcdFx0LnN0eWxlKCd0b3AnLCB0b3AgKyAncHgnKVxuXHRcdFx0XHRcdC50cmFuc2l0aW9uKClcblx0XHRcdFx0XHQuZHVyYXRpb24oMTAwKVxuXHRcdFx0XHRcdC5zdHlsZSgnbGVmdCcsIGxlZnQgKyAncHgnKVxuXG5cdFx0XHRcdC8vIGZ4LnNldFRleHQoZC5ub21lY29tcGxldG8gfHwgZC5ub21lKVxuXHRcdFx0XG5cdFx0XHRcdHNvdW5kX292ZXIucGxheSgpXG5cdFx0XHR9XG5cblx0XHRcdGZ1bmN0aW9uIG5vZGVfbW91c2VvdXQoZCwgaWR4KSB7XG5cdFx0XHRcdGlmKCQod2luZG93KS53aWR0aCgpIDwgNzY4KSByZXR1cm5cblx0XHRcdFxuXHRcdFx0XHQvLyBsYWJlbFxuXHRcdFx0XHRjb25zdCB0ZXh0ID0gZDMuc2VsZWN0KCcubGFiZWxbbGFiZWxfaWQ9XCInICsgZC5pZCArICdcIl0nKVxuXHRcdFx0XHRpZihfLmluZGV4T2YoWzAsIDEsIDIsIDMsIDQsIDVdLCBkLnRpcG8pICE9IC0xKXsgLy8gJ2Jhc2UnLCdkb2MnLCdvcmdhbycsJ3RpJ1xuXHRcdFx0XHRcdHRleHQuY2xhc3NlZCgnaGlkZGVuJywgZmFsc2UpXG5cdFx0XHRcdH1cblx0XHRcdFxuXHRcdFx0XHQvLyBsaW5rc1xuXHRcdFx0XHRkMy5zZWxlY3RBbGwoJy5tYXBhJykuY2xhc3NlZCgnaGlnaGxpZ2h0JywgZmFsc2UpXG5cblx0XHRcdFx0Ly8gY29uc3QgaXRlbU5hbWUgPSBkLmNvbnRleHQgPyBkLmNvbnRleHQgOiBkLnJlbF9pZHNcblx0XHRcdFx0Y29uc3QgaXRlbU5hbWUgPSBkLmNvbnRleHRbaWR4XSAhPSB1bmRlZmluZWQgPyBkLmNvbnRleHQgOiBkLnJlbF9pZHNcblxuXHRcdFx0XHQvLyBfLmZvckVhY2goZC5yZWxfaWRzLCBmdW5jdGlvbihpZCl7XG5cdFx0XHRcdF8uZm9yRWFjaChpdGVtTmFtZSwgZnVuY3Rpb24oaWQpe1xuXHRcdFx0XHRcdGQzLnNlbGVjdEFsbCgnLmxpbmsnKS5jbGFzc2VkKCdoaWdobGlnaHQnLCBmYWxzZSlcblx0XHRcdFx0XHRkMy5zZWxlY3RBbGwoJy5ub2RlJykuY2xhc3NlZCgnaGlnaGxpZ2h0JywgZmFsc2UpXG5cdFx0XHRcdH0pXG5cdFx0XHRcblx0XHRcdFx0Ly8gdG9vbHRpcFxuXHRcdFx0XHQvLyBmeC5zZXRUZXh0KGQubm9tZSlcblx0XHRcdFx0ZDMuc2VsZWN0QWxsKCcudG9vbHRpcC10ZXh0JylcbiAgICAgIFx0XHQudGV4dChkLm5vbWUpXG5cdFx0XHRcdHRvb2x0aXAuY2xhc3NlZCgnc2hvdycsIGZhbHNlKVxuXHRcdFx0fVxuXG5cdFx0XHRmdW5jdGlvbiBub2RlX2NsaWNrKGQsIGlkeCkge1xuXHRcdFx0XHQvLyBjb25zdCBpdGVtTmFtZSA9IGQuY29udGV4dCA/IGQuY29udGV4dCA6IGQucmVsX2lkc1xuXG5cdFx0XHRcdGNvbnN0IGl0ZW1OYW1lID0gZC5jb250ZXh0W2lkeF0gIT0gdW5kZWZpbmVkID8gZC5jb250ZXh0IDogZC5yZWxfaWRzXG5cblx0XHRcdFx0Y29uc3QgbmFtZSA9IGQuY29udGV4dFtpZHhdICE9IHVuZGVmaW5lZCA/ICdjb250ZXh0JyA6ICdpZHMnXG5cblx0XHRcdFx0c291bmRfY2xpY2sucGxheSgpXG5cdFx0XHRcblx0XHRcdFx0aWYoY3VycmVudF9pZCA9PSBkLmlkKXtcblx0XHRcdFx0XHRjbG9zZUluZm8oKVxuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdHNob3dJbmZvKGQudGlwbywgZC5pZCwgaXRlbU5hbWUsIG5hbWUpXG5cdFx0XHRcdFx0Ly8gZ2EoJ3NlbmQnLCAnZXZlbnQnLCAnbm9kZScsICdjbGljaycsIGQudGlwbyArIFwiIC0gXCIgKyBkLm5vbWVjb21wbGV0bykgXG5cdFx0XHRcdH1cblx0XHRcdH1cblxuXHRcdFx0Ly8gSU5GTyBQQU5FTFxuXHRcdFx0bGV0IGN1cnJlbnRfaWQgPSBudWxsXG5cblx0XHRcdGZ1bmN0aW9uIHNob3dJbmZvKHRpcG8sIGlkLCBjb250ZXh0LCBuYW1lKSB7XG5cdFx0XHRcdGNvbnN0IHcgPSAkKHdpbmRvdykud2lkdGgoKVxuXHRcdFx0XHRjb25zdCB2aXMgPSBkMy5zZWxlY3QoXCIubWFwYVwiKVxuXHRcdFx0XHQvLyBjb25zdCBpdGVtTmFtZSA9IGNvbnRleHRbMF0gIT0gdW5kZWZpbmVkID8gY29udGV4dCA6IGlkXG5cblx0XHRcdFx0dmlzLmNsYXNzZWQoXCJzaG93LWluZm9cIiwgdHJ1ZSlcblxuXHRcdFx0XHQvLyBjb25zb2xlLmxvZyh0aXBvLCBpZCwgY29udGV4dClcblx0XHRcdFxuXHRcdFx0XHQvLyBvbGRcblx0XHRcdFx0ZDMuc2VsZWN0QWxsKCcubGluay5zaG93JykuY2xhc3NlZCgnc2hvdycsIGZhbHNlKVxuXHRcdFx0XHRkMy5zZWxlY3RBbGwoJy5ub2RlLnNob3cnKS5jbGFzc2VkKCdzaG93JywgZmFsc2UpXG5cdFx0XHRcdGQzLnNlbGVjdEFsbCgnLmxhYmVsLnNob3cnKS5jbGFzc2VkKCdzaG93JywgZmFsc2UpXG5cdFx0XHRcblx0XHRcdFx0Ly8gbmV3IFxuXHRcdFx0XHQvLyBjb25zdCBpdGVtTmFtZSA9IGQuY29udGV4dCA/IGQuY29udGV4dCA6IGQucmVsX2lkc1xuXG5cdFx0XHRcdC8vIGNvbnNvbGUubG9nKCdvaScsIGNvbnRleHQsIGlkKVxuXG5cdFx0XHRcdGNvbnN0IGFyciA9IF8uZmlsdGVyKGdyYXBoLmRhdGEubGlua3MsIGZ1bmN0aW9uKG8pIHsgcmV0dXJuIG8udGFyZ2V0ICA9PSBpZCB8fCBvLnNvdXJjZSAgPT0gaWQgfSlcblx0XHRcdFx0Y29uc3QgYmFzZXMgPSBuYW1lID09ICdjb250ZXh0JyA/IF8udW5pcShfLm1hcChhcnIsJ2NvbnRleHQnKSkgOiBfLnVuaXEoXy5tYXAoYXJyLCdiYXNlJykpIFxuXG5cdFx0XHRcdC8vIGNvbnN0IG9pID0gY29udGV4dFswXSAhPSB1bmRlZmluZWQgPyAnY29udGV4dCcgOiAnYmFzZSdcblxuXHRcdFx0XHQvLyBjb25zb2xlLmxvZyhiYXNlcywgb2kpXG5cblx0XHRcdFx0Ly8gXCJsaW5rLVwiICsgZC5jb250ZXh0XG5cdFx0XHRcblx0XHRcdFx0Xy5mb3JFYWNoKGJhc2VzLCBmdW5jdGlvbihiYXNlKXtcblx0XHRcdFx0Ly8gXy5mb3JFYWNoKGJhc2VzLCBmdW5jdGlvbihiYXNlKXtcblx0XHRcdFx0XHRkMy5zZWxlY3RBbGwoJy5saW5rLmxpbmstJyArIGJhc2UpLmNsYXNzZWQoJ3Nob3cnLCB0cnVlKVxuXHRcdFx0XHRcdGQzLnNlbGVjdEFsbCgnLm5vZGUubm9kZS0nICsgYmFzZSkuY2xhc3NlZCgnc2hvdycsIHRydWUpXG5cdFx0XHRcdFx0ZDMuc2VsZWN0QWxsKCcubGFiZWwubGFiZWwtJyArIGJhc2UpLmNsYXNzZWQoJ3Nob3cnLCB0cnVlKVxuXHRcdFx0XHR9KVxuXHRcdFx0XG5cdFx0XHRcdGNvbnN0IGluZm8gPSB3IDwgNzY4ID8gZDMuc2VsZWN0KCcubWFwYS1pbmZvLW1vYmlsZScpIDogZDMuc2VsZWN0KCcubWFwYS1pbmZvJylcblx0XHRcdFx0Y29uc3QgY29udGVudCA9IHcgPCA3NjggPyBkMy5zZWxlY3QoJy5tYXBhLWluZm8tbW9iaWxlLWNvbnRlbnQnKSA6IGQzLnNlbGVjdCgnLm1hcGEtaW5mby1jb250ZW50Jylcblx0XHRcdFxuXHRcdFx0XHRpbmZvLmNsYXNzZWQoJ2lzLWxvYWRpbmcnLCB0cnVlKVxuXHRcdFx0XHRjb250ZW50Lmh0bWwoJycpXG5cdFx0XHRcblx0XHRcdFx0Y29uc3QgaXRlbXMgPSBhcnJheV9ub2RlLmZpbHRlcihpdGVtID0+IGl0ZW0uaWQgPT0gaWQpO1xuXHRcdFx0XG5cdFx0XHRcdGl0ZW1zLm1hcChmdW5jdGlvbihpdGVtKSB7XG5cdFx0XHRcdFx0Y29udGVudC5odG1sKGBcblx0XHRcdFx0XHQgIDxoMyBjbGFzcz1cInRpdGxlXCI+JHtpdGVtLm5vbWVjb21wbGV0b308L2gzPlxuXG5cdFx0XHRcdFx0XHQke2l0ZW0uZGVjcmlwdGlvbn1cblxuXHRcdFx0XHRcdFx0JHtpdGVtLmJ1dHRvbl9saW5rID8gYDxhIGhyZWY9XCIke2l0ZW0uYnV0dG9uX2xpbmt9XCIgdGFyZ2V0PVwiX2JsYW5rXCIgY2xhc3M9XCJidG5cIj5cblx0XHRcdFx0XHRcdCAgPHNwYW4+JHtpdGVtLmJ1dHRvbl90ZXh0fTwvc3Bhbj5cblx0XHRcdFx0XHRcdFx0JHtpdGVtLmJ1dHRvbl9pY29uID8gYDxpbWcgc3JjPVwiJHtpdGVtLmJ1dHRvbl9pY29ufVwiIGFsdD1cIiR7aXRlbS5idXR0b25fdGV4dH1cIiAvPmAgOiAnJyB9XG5cdFx0XHRcdFx0XHQ8L2E+YCA6ICcnIH1cblx0XHRcdFx0XHRgKVxuXHRcdFx0XHQgIGluZm8uY2xhc3NlZCgnaXMtbG9hZGluZycsIGZhbHNlKVxuXHRcdFx0XHR9KVxuXHRcdFx0XG5cdFx0XHRcdGN1cnJlbnRfaWQgPSBpZFxuXHRcdFx0fVxuXG5cdFx0XHRmdW5jdGlvbiBjbG9zZUluZm8oKXtcblx0XHRcdFx0Y29uc3QgdyA9ICQod2luZG93KS53aWR0aCgpXG5cdFx0XHRcdGNvbnN0IHZpcyA9IGQzLnNlbGVjdChcIi5tYXBhXCIpXG5cdFx0XHRcdHZpcy5jbGFzc2VkKFwic2hvdy1pbmZvXCIsIGZhbHNlKVxuXHRcdFx0XG5cdFx0XHRcdGQzLnNlbGVjdEFsbCgnLmxpbmsuc2hvdycpLmNsYXNzZWQoJ3Nob3cnLCBmYWxzZSlcblx0XHRcdFx0ZDMuc2VsZWN0QWxsKCcubm9kZS5zaG93JykuY2xhc3NlZCgnc2hvdycsIGZhbHNlKVxuXHRcdFx0XHRkMy5zZWxlY3RBbGwoJy5sYWJlbC5zaG93JykuY2xhc3NlZCgnc2hvdycsIGZhbHNlKVxuXHRcdFx0XG5cdFx0XHRcdGN1cnJlbnRfaWQgPSBudWxsXG5cdFx0XHRcblx0XHRcdFx0aWYodyA8IDc2OCkge1xuXHRcdFx0XHRcdGQzLnNlbGVjdCgnLm1hcGEtaW5mby1tb2JpbGUtY29udGVudCcpLmh0bWwoJycpXG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHRcdFxuXHRcdFx0ZDMuc2VsZWN0KFwiLm1hcGEtaW5mby1jbG9zZVwiKS5vbihcImNsaWNrXCIsZnVuY3Rpb24oZSl7XG5cdFx0XHRcdGQzLmV2ZW50LnByZXZlbnREZWZhdWx0KClcblx0XHRcdFx0c291bmRfY2xpY2sucGxheSgpXG5cdFx0XHRcdGNsb3NlSW5mbygpXG5cdFx0XHR9KVxuXG5cdFx0XHRmdW5jdGlvbiBleHBvcnRjc3YoKXtcblx0XHRcdFx0Y29uc3QgcyA9ICcnXG5cdFx0XHRcdGdyYXBoLm5vZGVzLm1hcChmdW5jdGlvbihlbCl7XG5cdFx0XHRcdFx0cyArPSBlbC50aXBvICsgJywnICsgZWwuaWQgKyAnLCcgKyBlbC5ub21lICsgJywnICsgZWwubm9tZWNvbXBsZXRvICsgJywnICsgTWF0aC5yb3VuZChlbC54KSArICcsJyArIE1hdGgucm91bmQoZWwueSkgKyAnXFxuJ1xuXHRcdFx0XHR9KVxuXHRcdFx0fVxuXHRcdH1cblx0KVxuXG4gIHJldHVybiAoXG4gICAgPFMuV3JhcHBlcj5cblx0XHRcdDxzZWN0aW9uIGNsYXNzTmFtZT1cIm1hcGEgZXhpdFwiPlxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIm1hcGEtdmlld3BvcnRcIj5cbiAgICAgICAgICA8c3ZnIGNsYXNzTmFtZT1cIm1hcGEtdmlzXCIgcmVmPXtyZWZ9IHdpZHRoPVwiMTI4MFwiIGhlaWdodD1cIjk2MFwiPjwvc3ZnPlxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwidG9vbHRpcFwiPlxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ0b29sdGlwLXdyYXBwZXJcIj5cbiAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ0b29sdGlwLXRpdGxlXCI+PC9kaXY+XG4gICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwidG9vbHRpcC10ZXh0XCI+PC9kaXY+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJtYXBhLWluZm9cIj5cbiAgICAgICAgICA8YSBocmVmPVwiI1wiIGNsYXNzTmFtZT1cIm1hcGEtaW5mby1jbG9zZVwiPis8L2E+XG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJtYXBhLWluZm8tY29udGVudFwiPjwvZGl2PlxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibG9hZGluZ1wiPi4uLjwvZGl2PlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvc2VjdGlvbj5cbiAgICA8L1MuV3JhcHBlcj5cbiAgKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgQ2hhcnQ7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./pages/components/Map/index.js\n");

/***/ })

});